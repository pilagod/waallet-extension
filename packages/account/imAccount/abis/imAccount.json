{
  "abi": [
    {
      "type": "constructor",
      "inputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "fallback",
      "stateMutability": "nonpayable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "execute",
      "inputs": [
        {
          "name": "calls",
          "type": "tuple[]",
          "internalType": "struct Call[]",
          "components": [
            {
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getEntryPoint",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IEntryPoint"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getExternalValidator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IValidator"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getFallbackHandler",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IFallbackHandler"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOwnerValidator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IValidator"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSpaceVersion",
      "inputs": [
        {
          "name": "validator",
          "type": "address",
          "internalType": "contract IValidator"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getValidationInfo",
      "inputs": [
        {
          "name": "userOp",
          "type": "tuple",
          "internalType": "struct UserOperation",
          "components": [
            {
              "name": "sender",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "initCode",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "callData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "callGasLimit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "verificationGasLimit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "preVerificationGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "maxFeePerGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "maxPriorityFeePerGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "paymasterAndData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IValidator"
        },
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum OpTarget"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getValue",
      "inputs": [
        {
          "name": "validator",
          "type": "address",
          "internalType": "contract IValidator"
        },
        {
          "name": "version",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "key",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getValue",
      "inputs": [
        {
          "name": "validator",
          "type": "address",
          "internalType": "contract IValidator"
        },
        {
          "name": "key",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "entryPoint",
          "type": "address",
          "internalType": "contract IEntryPoint"
        },
        {
          "name": "fallbackHandler",
          "type": "address",
          "internalType": "contract IFallbackHandler"
        },
        {
          "name": "ownerValidator",
          "type": "address",
          "internalType": "contract IValidator"
        },
        {
          "name": "ownerValidatorInitData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isCurrentValidator",
      "inputs": [
        {
          "name": "validator",
          "type": "address",
          "internalType": "contract IValidator"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isValidSignature",
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "signature",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "magicValue",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setEntryPoint",
      "inputs": [
        {
          "name": "entryPoint",
          "type": "address",
          "internalType": "contract IEntryPoint"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setExternalValidator",
      "inputs": [
        {
          "name": "externalValidator",
          "type": "address",
          "internalType": "contract IValidator"
        },
        {
          "name": "initData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setFallbackHandler",
      "inputs": [
        {
          "name": "handler",
          "type": "address",
          "internalType": "contract IFallbackHandler"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setOwnerValidator",
      "inputs": [
        {
          "name": "ownerValidator",
          "type": "address",
          "internalType": "contract IValidator"
        },
        {
          "name": "initData",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setValue",
      "inputs": [
        {
          "name": "key",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "value",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeTo",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeToAndCall",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "validateUserOp",
      "inputs": [
        {
          "name": "userOp",
          "type": "tuple",
          "internalType": "struct UserOperation",
          "components": [
            {
              "name": "sender",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "nonce",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "initCode",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "callData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "callGasLimit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "verificationGasLimit",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "preVerificationGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "maxFeePerGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "maxPriorityFeePerGas",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "paymasterAndData",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "userOpHash",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "missingAccountFunds",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "validationData",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "AdminChanged",
      "inputs": [
        {
          "name": "previousAdmin",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "newAdmin",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BeaconUpgraded",
      "inputs": [
        {
          "name": "beacon",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "EntryPointChanged",
      "inputs": [
        {
          "name": "prevEntryPoint",
          "type": "address",
          "indexed": true,
          "internalType": "contract IEntryPoint"
        },
        {
          "name": "curEntryPoint",
          "type": "address",
          "indexed": true,
          "internalType": "contract IEntryPoint"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ExternalValidatorChanged",
      "inputs": [
        {
          "name": "prevExternalValidator",
          "type": "address",
          "indexed": true,
          "internalType": "contract IValidator"
        },
        {
          "name": "curExternalValidator",
          "type": "address",
          "indexed": true,
          "internalType": "contract IValidator"
        },
        {
          "name": "hasInitCall",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        },
        {
          "name": "initSelector",
          "type": "bytes4",
          "indexed": false,
          "internalType": "bytes4"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "FallbackHandlerChanged",
      "inputs": [
        {
          "name": "previousHandler",
          "type": "address",
          "indexed": true,
          "internalType": "contract IFallbackHandler"
        },
        {
          "name": "currentHandler",
          "type": "address",
          "indexed": true,
          "internalType": "contract IFallbackHandler"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnerValidatorChanged",
      "inputs": [
        {
          "name": "prevOwnerValidator",
          "type": "address",
          "indexed": true,
          "internalType": "contract IValidator"
        },
        {
          "name": "curOwnerValidator",
          "type": "address",
          "indexed": true,
          "internalType": "contract IValidator"
        },
        {
          "name": "hasInitCall",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        },
        {
          "name": "initSelector",
          "type": "bytes4",
          "indexed": false,
          "internalType": "bytes4"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e7565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e5576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161297c6200011f600039600081816107bc015281816107fc01528181610aae01528181610aee0152610b6a015261297c6000f3fe60806040526004361061012e5760003560e01c806355614fcc116100ab578063856dfd991161006f578063856dfd991461045d5780639358adf5146104725780639cf6d23614610492578063ec283494146104b2578063f08a0323146104f5578063f1f1e1d91461051557610135565b806355614fcc1461039d578063584465f2146103cd5780637292b791146103ed57806377b326f81461041a5780637fcf4a691461044857610135565b80633a871cdd116100f25780633a871cdd146103125780633f707e6b1461034057806344ab613f146103605780634f1ef2861461037557806352d1902d1461038857610135565b80630e486e60146102215780631626ba7e14610277578063246581f7146102b057806327395ac7146102d25780633659cfe6146102f257610135565b3661013557005b34801561014157600080fd5b50600061014c610535565b90506001600160a01b0381166101a95760405162461bcd60e51b815260206004820152601f60248201527f436f6e666967204e6f74205365743a2046616c6c6261636b48616e646c65720060448201526064015b60405180910390fd5b600080826001600160a01b03166000366040516101c7929190611c24565b600060405180830381855afa9150503d8060008114610202576040519150601f19603f3d011682016040523d82523d6000602084013e610207565b606091505b50915091508161021957805160208201fd5b805160208201f35b34801561022d57600080fd5b507faf306d19573fd404bed876656e4bfdffbbe2cbf74c360f313030ac331a202f01546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561028357600080fd5b50610297610292366004611c7c565b610568565b6040516001600160e01b0319909116815260200161026e565b3480156102bc57600080fd5b506102d06102cb366004611cdc565b610620565b005b3480156102de57600080fd5b506102d06102ed366004611d57565b61074b565b3480156102fe57600080fd5b506102d061030d366004611da2565b6107b2565b34801561031e57600080fd5b5061033261032d366004611dd8565b61087a565b60405190815260200161026e565b34801561034c57600080fd5b506102d061035b366004611e25565b6109c3565b34801561036c57600080fd5b5061025a610a7c565b6102d0610383366004611f4e565b610aa4565b34801561039457600080fd5b50610332610b5d565b3480156103a957600080fd5b506103bd6103b8366004611da2565b610c10565b604051901515815260200161026e565b3480156103d957600080fd5b506102d06103e8366004611da2565b610c21565b3480156103f957600080fd5b5061040d610408366004611f9d565b610c49565b60405161026e9190612022565b34801561042657600080fd5b5061043a610435366004612035565b610d1e565b60405161026e9291906120a1565b34801561045457600080fd5b5061025a61108b565b34801561046957600080fd5b5061025a610535565b34801561047e57600080fd5b506102d061048d366004611c7c565b6110a1565b34801561049e57600080fd5b5061040d6104ad3660046120be565b611110565b3480156104be57600080fd5b506103326104cd366004611da2565b6001600160a01b03166000908152600080516020612927833981519152602052604090205490565b34801561050157600080fd5b506102d0610510366004611da2565b6111e5565b34801561052157600080fd5b506102d0610530366004611d57565b61120d565b60007f1548400c2fdbbf7c95ce759dedcf37664eed65746ca98046d143de6eac3c2d005b546001600160a01b0316919050565b60008061057783850185611da2565b905061058281610c10565b80156105fa5750604051637ad527b160e01b81526001600160a01b03821690637ad527b1906105b990889088908890600401612113565b602060405180830381865afa1580156105d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fa9190612136565b61060c576001600160e01b0319610615565b630b135d3f60e11b5b9150505b9392505050565b600054610100900460ff16158080156106405750600054600160ff909116105b8061065a5750303b15801561065a575060005460ff166001145b6106bd5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101a0565b6000805460ff1916600117905580156106e0576000805461ff0019166101001790555b6106e986611292565b6106f285611332565b6106fd84848461142a565b8015610743576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b33301461076a5760405162461bcd60e51b81526004016101a090612158565b61077261108b565b6001600160a01b0316836001600160a01b0316036107a25760405162461bcd60e51b81526004016101a09061218f565b6107ad83838361152b565b505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107fa5760405162461bcd60e51b81526004016101a0906121e2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661082c611620565b6001600160a01b0316146108525760405162461bcd60e51b81526004016101a09061222e565b61085b81611636565b6040805160008082526020820190925261087791839190611655565b50565b6000610884610a7c565b6001600160a01b0316336001600160a01b0316146108e45760405162461bcd60e51b815260206004820152601d60248201527f4163636573732044656e6965643a206e6f7420456e747279506f696e7400000060448201526064016101a0565b6000806108f086610d1e565b6040516335315f4360e11b815291935091506001600160a01b03831690636a62be8690610925908990899086906004016122bf565b602060405180830381865afa158015610942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096691906123df565b925083156109ba57604051600090339086908381818185875af1925050503d80600081146109b0576040519150601f19603f3d011682016040523d82523d6000602084013e6109b5565b606091505b505050505b50509392505050565b6109cb610a7c565b6001600160a01b0316336001600160a01b031614610a2b5760405162461bcd60e51b815260206004820152601d60248201527f4163636573732044656e6965643a206e6f7420456e747279506f696e7400000060448201526064016101a0565b60005b818110156107ad57610a6b838383818110610a4b57610a4b6123f8565b9050602002810190610a5d919061240e565b610a66906124b2565b6117c0565b50610a75816124be565b9050610a2e565b60007fd8c6fd373784be47376319e29e6534d1fbff8223ee19f610b906e6baa0785100610559565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610aec5760405162461bcd60e51b81526004016101a0906121e2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b1e611620565b6001600160a01b031614610b445760405162461bcd60e51b81526004016101a09061222e565b610b4d82611636565b610b5982826001611655565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610bfd5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016101a0565b506000805160206128c083398151915290565b6000610c1b8261184b565b92915050565b333014610c405760405162461bcd60e51b81526004016101a090612158565b61087781611292565b6001600160a01b03831660009081526000805160206129278339815191526020908152604080832085845260018101835281842085855290925290912080546060929190610c96906124e5565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc2906124e5565b8015610d0f5780601f10610ce457610100808354040283529160200191610d0f565b820191906000526020600020905b815481529060010190602001808311610cf257829003601f168201915b50505050509150509392505050565b60008080610d2f6060850185612519565b610d3e9160049160009161255f565b610d4791612589565b90506001600160e01b03198116633f707e6b60e01b14610d795760405162461bcd60e51b81526004016101a0906125b9565b6000610d886060860186612519565b610d9691600490829061255f565b810190610da391906125fc565b805190915080610dc55760405162461bcd60e51b81526004016101a0906125b9565b600082600081518110610dda57610dda6123f8565b60200260200101516000015190506000610df38261188e565b905060015b83811015610f7757610e26858281518110610e1557610e156123f8565b60200260200101516000015161188e565b6002811115610e3757610e37612069565b826002811115610e4957610e49612069565b14610eb35760405162461bcd60e51b815260206004820152603460248201527f56616c69646174696f6e204661696c65643a2063616c6c7320636f6e7461696e60448201527320646966666572656e74204f705461726765747360601b60648201526084016101a0565b6002826002811115610ec757610ec7612069565b14610f6757848181518110610ede57610ede6123f8565b6020026020010151600001516001600160a01b0316836001600160a01b031614610f675760405162461bcd60e51b815260206004820152603460248201527f56616c69646174696f6e204661696c65643a2063616c6c7320646f206e6f742060448201527368617665207468652073616d652063616c6c656560601b60648201526084016101a0565b610f70816124be565b9050610df8565b506000610f886101408a018a612519565b810190610f959190611da2565b9050610fa081610c10565b610fbc5760405162461bcd60e51b81526004016101a0906126be565b6000826002811115610fd057610fd0612069565b03611022576000610fdf61108b565b9050806001600160a01b0316826001600160a01b0316146110125760405162461bcd60e51b81526004016101a090612702565b9960009950975050505050505050565b600182600281111561103657611036612069565b0361107c57826001600160a01b0316816001600160a01b03161461106c5760405162461bcd60e51b81526004016101a090612702565b5090976001975095505050505050565b98600298509650505050505050565b6000600080516020612907833981519152610559565b336110ab8161184b565b6110c75760405162461bcd60e51b81526004016101a0906126be565b6001600160a01b0381166000908152600080516020612927833981519152602090815260408083208054845260018101835281842088855290925290912061074384868361278c565b6001600160a01b038216600090815260008051602061292783398151915260209081526040808320805484526001810183528184208585529092529091208054606092919061115e906124e5565b80601f016020809104026020016040519081016040528092919081815260200182805461118a906124e5565b80156111d75780601f106111ac576101008083540402835291602001916111d7565b820191906000526020600020905b8154815290600101906020018083116111ba57829003601f168201915b505050505091505092915050565b3330146112045760405162461bcd60e51b81526004016101a090612158565b61087781611332565b33301461122c5760405162461bcd60e51b81526004016101a090612158565b7faf306d19573fd404bed876656e4bfdffbbe2cbf74c360f313030ac331a202f01546001600160a01b03166001600160a01b0316836001600160a01b0316036112875760405162461bcd60e51b81526004016101a09061218f565b6107ad83838361142a565b6001600160a01b0381166112b85760405162461bcd60e51b81526004016101a09061284c565b7fd8c6fd373784be47376319e29e6534d1fbff8223ee19f610b906e6baa078510080546040516001600160a01b038481169216907f450909c1478d09248269d4ad4fa8cba61ca3f50faed58c7aedefa51c7f62b83a90600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b306001600160a01b0382160361138a5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420496e7075743a2073656c662061646472657373000000000060448201526064016101a0565b6001600160a01b0381166113b05760405162461bcd60e51b81526004016101a09061284c565b7f1548400c2fdbbf7c95ce759dedcf37664eed65746ca98046d143de6eac3c2d0080546040516001600160a01b038481169216907fe799cdc19308bffc2f9ad7d1d770ef83d2d702bd8c7e9faaa65068e3e589b36a90600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166114505760405162461bcd60e51b81526004016101a09061284c565b600060008051602061290783398151915280546001600160a01b038681166001600160a01b03198316178355604080516020601f88018190048102820181019092528681529394509116916000916114c491889188908890819084018382808284376000920191909152506118c692505050565b90506001600160a01b038087169083167f7ae8d48d7872cc5e50165b793f270de5210e6354b7322e9b22cd3d87e211190483611500888a612589565b6040805192151583526001600160e01b031990911660208301520160405180910390a3505050505050565b6001600160a01b0383166115515760405162461bcd60e51b81526004016101a09061284c565b7faf306d19573fd404bed876656e4bfdffbbe2cbf74c360f313030ac331a202f0180546001600160a01b038581166001600160a01b0319831617909255604080516020601f860181900481028201810190925284815260008051602061290783398151915293909216916000916115e491889188908890819084018382808284376000920191909152506118c692505050565b90506001600160a01b038087169083167fcae555cd0fc3d9dbdefb85fdc232a91c5942cad1e638f07e0280061d7339dc3583611500888a612589565b60006000805160206128c0833981519152610559565b3330146108775760405162461bcd60e51b81526004016101a090612158565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611688576107ad836119aa565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156116e2575060408051601f3d908101601f191682019092526116df918101906123df565b60015b6117455760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016101a0565b6000805160206128c083398151915281146117b45760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016101a0565b506107ad838383611a46565b6060600082600001519050600080826001600160a01b0316856020015186604001516040516117ef9190612883565b60006040518083038185875af1925050503d806000811461182c576040519150601f19603f3d011682016040523d82523d6000602084013e611831565b606091505b50915091508161184357805160208201fd5b949350505050565b6000805160206129078339815191528054600091906001600160a01b0384811691161480610619575060018101546001600160a01b038481169116149392505050565b6000306001600160a01b038316036118a857506000919050565b6118b182610c10565b156118be57506001919050565b506002919050565b60006118d183611a71565b5050805115801590610c1b57600061190c6040518060600160405280866001600160a01b0316815260200160008152602001858152506117c0565b8051909150632f668f9960e01b9061192d9083016020908101908401612895565b6001600160e01b031916146119a35760405162461bcd60e51b815260206004820152603660248201527f4163636f756e7420557064617465204661696c65643a2076616c696461746f72604482015275081a5b9a5d1a585b1a5e985d1a5bdb8819985a5b195960521b60648201526084016101a0565b5092915050565b6001600160a01b0381163b611a175760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016101a0565b6000805160206128c083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611a4f83611aae565b600082511180611a5c5750805b156107ad57611a6b8383611aee565b50505050565b6001600160a01b03811660009081526000805160206129278339815191526020526040812080548290611aa3906124be565b918290555092915050565b611ab7816119aa565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061061983836040518060600160405280602781526020016128e0602791396060600080856001600160a01b031685604051611b2b9190612883565b600060405180830381855af49150503d8060008114611b66576040519150601f19603f3d011682016040523d82523d6000602084013e611b6b565b606091505b5091509150611b7c86838387611b86565b9695505050505050565b60608315611bf5578251600003611bee576001600160a01b0385163b611bee5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101a0565b5081611843565b6118438383815115611c0a5781518083602001fd5b8060405162461bcd60e51b81526004016101a09190612022565b8183823760009101908152919050565b60008083601f840112611c4657600080fd5b5081356001600160401b03811115611c5d57600080fd5b602083019150836020828501011115611c7557600080fd5b9250929050565b600080600060408486031215611c9157600080fd5b8335925060208401356001600160401b03811115611cae57600080fd5b611cba86828701611c34565b9497909650939450505050565b6001600160a01b038116811461087757600080fd5b600080600080600060808688031215611cf457600080fd5b8535611cff81611cc7565b94506020860135611d0f81611cc7565b93506040860135611d1f81611cc7565b925060608601356001600160401b03811115611d3a57600080fd5b611d4688828901611c34565b969995985093965092949392505050565b600080600060408486031215611d6c57600080fd5b8335611d7781611cc7565b925060208401356001600160401b03811115611cae57600080fd5b8035611d9d81611cc7565b919050565b600060208284031215611db457600080fd5b813561061981611cc7565b60006101608284031215611dd257600080fd5b50919050565b600080600060608486031215611ded57600080fd5b83356001600160401b03811115611e0357600080fd5b611e0f86828701611dbf565b9660208601359650604090950135949350505050565b60008060208385031215611e3857600080fd5b82356001600160401b0380821115611e4f57600080fd5b818501915085601f830112611e6357600080fd5b813581811115611e7257600080fd5b8660208260051b8501011115611e8757600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611ed757611ed7611e99565b604052919050565b600082601f830112611ef057600080fd5b81356001600160401b03811115611f0957611f09611e99565b611f1c601f8201601f1916602001611eaf565b818152846020838601011115611f3157600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611f6157600080fd5b8235611f6c81611cc7565b915060208301356001600160401b03811115611f8757600080fd5b611f9385828601611edf565b9150509250929050565b600080600060608486031215611fb257600080fd5b8335611fbd81611cc7565b95602085013595506040909401359392505050565b60005b83811015611fed578181015183820152602001611fd5565b50506000910152565b6000815180845261200e816020860160208601611fd2565b601f01601f19169290920160200192915050565b6020815260006106196020830184611ff6565b60006020828403121561204757600080fd5b81356001600160401b0381111561205d57600080fd5b61184384828501611dbf565b634e487b7160e01b600052602160045260246000fd5b6003811061209d57634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038316815260408101610619602083018461207f565b600080604083850312156120d157600080fd5b82356120dc81611cc7565b946020939093013593505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b83815260406020820152600061212d6040830184866120ea565b95945050505050565b60006020828403121561214857600080fd5b8151801515811461061957600080fd5b60208082526017908201527f4163636573732044656e6965643a206e6f742073656c66000000000000000000604082015260600190565b60208082526033908201527f4163636f756e7420557064617465204661696c65643a2076616c696461746f726040820152721cc81b5d5cdd08189948191a5999995c995b9d606a1b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000808335601e1984360301811261229157600080fd5b83016020810192503590506001600160401b038111156122b057600080fd5b803603821315611c7557600080fd5b606081526122e0606082016122d386611d92565b6001600160a01b03169052565b6020840135608082015260006122f9604086018661227a565b6101608060a08601526123116101c0860183856120ea565b9250612320606089018961227a565b9250605f19808786030160c088015261233a8585846120ea565b945060808a013560e0880152610100935060a08a013584880152610120915060c08a01358288015261014060e08b013581890152848b013584890152612382838c018c61227a565b95509350818887030161018089015261239c8686866120ea565b95506123aa818c018c61227a565b955093505080878603016101a088015250506123c78383836120ea565b9350505050836020830152611843604083018461207f565b6000602082840312156123f157600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60008235605e1983360301811261242457600080fd5b9190910192915050565b60006060828403121561244057600080fd5b604051606081016001600160401b03828210818311171561246357612463611e99565b816040528293508435915061247782611cc7565b81835260208501356020840152604085013591508082111561249857600080fd5b506124a585828601611edf565b6040830152505092915050565b6000610c1b368361242e565b6000600182016124de57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806124f957607f821691505b602082108103611dd257634e487b7160e01b600052602260045260246000fd5b6000808335601e1984360301811261253057600080fd5b8301803591506001600160401b0382111561254a57600080fd5b602001915036819003821315611c7557600080fd5b6000808585111561256f57600080fd5b8386111561257c57600080fd5b5050820193919092039150565b6001600160e01b031981358181169160048510156125b15780818660040360031b1b83161692505b505092915050565b60208082526023908201527f56616c69646174696f6e204661696c65643a20696e76616c69642063616c6c6460408201526261746160e81b606082015260800190565b6000602080838503121561260f57600080fd5b82356001600160401b038082111561262657600080fd5b818501915085601f83011261263a57600080fd5b81358181111561264c5761264c611e99565b8060051b61265b858201611eaf565b918252838101850191858101908984111561267557600080fd5b86860192505b838310156126b1578235858111156126935760008081fd5b6126a18b89838a010161242e565b835250918601919086019061267b565b9998505050505050505050565b60208082526024908201527f4163636573732044656e6965643a206e6f742063757272656e742076616c696460408201526330ba37b960e11b606082015260800190565b60208082526024908201527f56616c69646174696f6e204661696c65643a20696e76616c69642076616c696460408201526330ba37b960e11b606082015260800190565b601f8211156107ad57600081815260208120601f850160051c8101602086101561276d5750805b601f850160051c820191505b8181101561074357828155600101612779565b6001600160401b038311156127a3576127a3611e99565b6127b7836127b183546124e5565b83612746565b6000601f8411600181146127eb57600085156127d35750838201355b600019600387901b1c1916600186901b178355612845565b600083815260209020601f19861690835b8281101561281c57868501358255602094850194600190920191016127fc565b50868210156128395760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b6020808252601b908201527f496e76616c696420496e7075743a207a65726f20616464726573730000000000604082015260600190565b60008251612424818460208701611fd2565b6000602082840312156128a757600080fd5b81516001600160e01b03198116811461061957600080fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564af306d19573fd404bed876656e4bfdffbbe2cbf74c360f313030ac331a202f008c48e357b146d48b3bd08103a6b1db6a3beec3b5daf56b6ad010e307f6b0fb00a26469706673582212209a9899a2df5947a56b01017ae6b485db4d2af063a1b654638ceed261d407538e64736f6c63430008110033",
    "sourceMap": "906:4676:78:-:0;;;1088:4:47;1045:48;;1050:53:78;;;;;;;;;-1:-1:-1;1074:22:78;:20;:22::i;:::-;906:4676;;5917:280:46;5985:13;;;;;;;5984:14;5976:66;;;;-1:-1:-1;;;5976:66:46;;216:2:128;5976:66:46;;;198:21:128;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:128;;;338:37;392:19;;5976:66:46;;;;;;;;6056:12;;6072:15;6056:12;;;:31;6052:139;;6103:12;:30;;-1:-1:-1;;6103:30:46;6118:15;6103:30;;;;;;6152:28;;564:36:128;;;6152:28:46;;552:2:128;537:18;6152:28:46;;;;;;;6052:139;5917:280::o;422:184:128:-;906:4676:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061012e5760003560e01c806355614fcc116100ab578063856dfd991161006f578063856dfd991461045d5780639358adf5146104725780639cf6d23614610492578063ec283494146104b2578063f08a0323146104f5578063f1f1e1d91461051557610135565b806355614fcc1461039d578063584465f2146103cd5780637292b791146103ed57806377b326f81461041a5780637fcf4a691461044857610135565b80633a871cdd116100f25780633a871cdd146103125780633f707e6b1461034057806344ab613f146103605780634f1ef2861461037557806352d1902d1461038857610135565b80630e486e60146102215780631626ba7e14610277578063246581f7146102b057806327395ac7146102d25780633659cfe6146102f257610135565b3661013557005b34801561014157600080fd5b50600061014c610535565b90506001600160a01b0381166101a95760405162461bcd60e51b815260206004820152601f60248201527f436f6e666967204e6f74205365743a2046616c6c6261636b48616e646c65720060448201526064015b60405180910390fd5b600080826001600160a01b03166000366040516101c7929190611c24565b600060405180830381855afa9150503d8060008114610202576040519150601f19603f3d011682016040523d82523d6000602084013e610207565b606091505b50915091508161021957805160208201fd5b805160208201f35b34801561022d57600080fd5b507faf306d19573fd404bed876656e4bfdffbbe2cbf74c360f313030ac331a202f01546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561028357600080fd5b50610297610292366004611c7c565b610568565b6040516001600160e01b0319909116815260200161026e565b3480156102bc57600080fd5b506102d06102cb366004611cdc565b610620565b005b3480156102de57600080fd5b506102d06102ed366004611d57565b61074b565b3480156102fe57600080fd5b506102d061030d366004611da2565b6107b2565b34801561031e57600080fd5b5061033261032d366004611dd8565b61087a565b60405190815260200161026e565b34801561034c57600080fd5b506102d061035b366004611e25565b6109c3565b34801561036c57600080fd5b5061025a610a7c565b6102d0610383366004611f4e565b610aa4565b34801561039457600080fd5b50610332610b5d565b3480156103a957600080fd5b506103bd6103b8366004611da2565b610c10565b604051901515815260200161026e565b3480156103d957600080fd5b506102d06103e8366004611da2565b610c21565b3480156103f957600080fd5b5061040d610408366004611f9d565b610c49565b60405161026e9190612022565b34801561042657600080fd5b5061043a610435366004612035565b610d1e565b60405161026e9291906120a1565b34801561045457600080fd5b5061025a61108b565b34801561046957600080fd5b5061025a610535565b34801561047e57600080fd5b506102d061048d366004611c7c565b6110a1565b34801561049e57600080fd5b5061040d6104ad3660046120be565b611110565b3480156104be57600080fd5b506103326104cd366004611da2565b6001600160a01b03166000908152600080516020612927833981519152602052604090205490565b34801561050157600080fd5b506102d0610510366004611da2565b6111e5565b34801561052157600080fd5b506102d0610530366004611d57565b61120d565b60007f1548400c2fdbbf7c95ce759dedcf37664eed65746ca98046d143de6eac3c2d005b546001600160a01b0316919050565b60008061057783850185611da2565b905061058281610c10565b80156105fa5750604051637ad527b160e01b81526001600160a01b03821690637ad527b1906105b990889088908890600401612113565b602060405180830381865afa1580156105d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fa9190612136565b61060c576001600160e01b0319610615565b630b135d3f60e11b5b9150505b9392505050565b600054610100900460ff16158080156106405750600054600160ff909116105b8061065a5750303b15801561065a575060005460ff166001145b6106bd5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101a0565b6000805460ff1916600117905580156106e0576000805461ff0019166101001790555b6106e986611292565b6106f285611332565b6106fd84848461142a565b8015610743576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b33301461076a5760405162461bcd60e51b81526004016101a090612158565b61077261108b565b6001600160a01b0316836001600160a01b0316036107a25760405162461bcd60e51b81526004016101a09061218f565b6107ad83838361152b565b505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107fa5760405162461bcd60e51b81526004016101a0906121e2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661082c611620565b6001600160a01b0316146108525760405162461bcd60e51b81526004016101a09061222e565b61085b81611636565b6040805160008082526020820190925261087791839190611655565b50565b6000610884610a7c565b6001600160a01b0316336001600160a01b0316146108e45760405162461bcd60e51b815260206004820152601d60248201527f4163636573732044656e6965643a206e6f7420456e747279506f696e7400000060448201526064016101a0565b6000806108f086610d1e565b6040516335315f4360e11b815291935091506001600160a01b03831690636a62be8690610925908990899086906004016122bf565b602060405180830381865afa158015610942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096691906123df565b925083156109ba57604051600090339086908381818185875af1925050503d80600081146109b0576040519150601f19603f3d011682016040523d82523d6000602084013e6109b5565b606091505b505050505b50509392505050565b6109cb610a7c565b6001600160a01b0316336001600160a01b031614610a2b5760405162461bcd60e51b815260206004820152601d60248201527f4163636573732044656e6965643a206e6f7420456e747279506f696e7400000060448201526064016101a0565b60005b818110156107ad57610a6b838383818110610a4b57610a4b6123f8565b9050602002810190610a5d919061240e565b610a66906124b2565b6117c0565b50610a75816124be565b9050610a2e565b60007fd8c6fd373784be47376319e29e6534d1fbff8223ee19f610b906e6baa0785100610559565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610aec5760405162461bcd60e51b81526004016101a0906121e2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b1e611620565b6001600160a01b031614610b445760405162461bcd60e51b81526004016101a09061222e565b610b4d82611636565b610b5982826001611655565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610bfd5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016101a0565b506000805160206128c083398151915290565b6000610c1b8261184b565b92915050565b333014610c405760405162461bcd60e51b81526004016101a090612158565b61087781611292565b6001600160a01b03831660009081526000805160206129278339815191526020908152604080832085845260018101835281842085855290925290912080546060929190610c96906124e5565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc2906124e5565b8015610d0f5780601f10610ce457610100808354040283529160200191610d0f565b820191906000526020600020905b815481529060010190602001808311610cf257829003601f168201915b50505050509150509392505050565b60008080610d2f6060850185612519565b610d3e9160049160009161255f565b610d4791612589565b90506001600160e01b03198116633f707e6b60e01b14610d795760405162461bcd60e51b81526004016101a0906125b9565b6000610d886060860186612519565b610d9691600490829061255f565b810190610da391906125fc565b805190915080610dc55760405162461bcd60e51b81526004016101a0906125b9565b600082600081518110610dda57610dda6123f8565b60200260200101516000015190506000610df38261188e565b905060015b83811015610f7757610e26858281518110610e1557610e156123f8565b60200260200101516000015161188e565b6002811115610e3757610e37612069565b826002811115610e4957610e49612069565b14610eb35760405162461bcd60e51b815260206004820152603460248201527f56616c69646174696f6e204661696c65643a2063616c6c7320636f6e7461696e60448201527320646966666572656e74204f705461726765747360601b60648201526084016101a0565b6002826002811115610ec757610ec7612069565b14610f6757848181518110610ede57610ede6123f8565b6020026020010151600001516001600160a01b0316836001600160a01b031614610f675760405162461bcd60e51b815260206004820152603460248201527f56616c69646174696f6e204661696c65643a2063616c6c7320646f206e6f742060448201527368617665207468652073616d652063616c6c656560601b60648201526084016101a0565b610f70816124be565b9050610df8565b506000610f886101408a018a612519565b810190610f959190611da2565b9050610fa081610c10565b610fbc5760405162461bcd60e51b81526004016101a0906126be565b6000826002811115610fd057610fd0612069565b03611022576000610fdf61108b565b9050806001600160a01b0316826001600160a01b0316146110125760405162461bcd60e51b81526004016101a090612702565b9960009950975050505050505050565b600182600281111561103657611036612069565b0361107c57826001600160a01b0316816001600160a01b03161461106c5760405162461bcd60e51b81526004016101a090612702565b5090976001975095505050505050565b98600298509650505050505050565b6000600080516020612907833981519152610559565b336110ab8161184b565b6110c75760405162461bcd60e51b81526004016101a0906126be565b6001600160a01b0381166000908152600080516020612927833981519152602090815260408083208054845260018101835281842088855290925290912061074384868361278c565b6001600160a01b038216600090815260008051602061292783398151915260209081526040808320805484526001810183528184208585529092529091208054606092919061115e906124e5565b80601f016020809104026020016040519081016040528092919081815260200182805461118a906124e5565b80156111d75780601f106111ac576101008083540402835291602001916111d7565b820191906000526020600020905b8154815290600101906020018083116111ba57829003601f168201915b505050505091505092915050565b3330146112045760405162461bcd60e51b81526004016101a090612158565b61087781611332565b33301461122c5760405162461bcd60e51b81526004016101a090612158565b7faf306d19573fd404bed876656e4bfdffbbe2cbf74c360f313030ac331a202f01546001600160a01b03166001600160a01b0316836001600160a01b0316036112875760405162461bcd60e51b81526004016101a09061218f565b6107ad83838361142a565b6001600160a01b0381166112b85760405162461bcd60e51b81526004016101a09061284c565b7fd8c6fd373784be47376319e29e6534d1fbff8223ee19f610b906e6baa078510080546040516001600160a01b038481169216907f450909c1478d09248269d4ad4fa8cba61ca3f50faed58c7aedefa51c7f62b83a90600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b306001600160a01b0382160361138a5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420496e7075743a2073656c662061646472657373000000000060448201526064016101a0565b6001600160a01b0381166113b05760405162461bcd60e51b81526004016101a09061284c565b7f1548400c2fdbbf7c95ce759dedcf37664eed65746ca98046d143de6eac3c2d0080546040516001600160a01b038481169216907fe799cdc19308bffc2f9ad7d1d770ef83d2d702bd8c7e9faaa65068e3e589b36a90600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166114505760405162461bcd60e51b81526004016101a09061284c565b600060008051602061290783398151915280546001600160a01b038681166001600160a01b03198316178355604080516020601f88018190048102820181019092528681529394509116916000916114c491889188908890819084018382808284376000920191909152506118c692505050565b90506001600160a01b038087169083167f7ae8d48d7872cc5e50165b793f270de5210e6354b7322e9b22cd3d87e211190483611500888a612589565b6040805192151583526001600160e01b031990911660208301520160405180910390a3505050505050565b6001600160a01b0383166115515760405162461bcd60e51b81526004016101a09061284c565b7faf306d19573fd404bed876656e4bfdffbbe2cbf74c360f313030ac331a202f0180546001600160a01b038581166001600160a01b0319831617909255604080516020601f860181900481028201810190925284815260008051602061290783398151915293909216916000916115e491889188908890819084018382808284376000920191909152506118c692505050565b90506001600160a01b038087169083167fcae555cd0fc3d9dbdefb85fdc232a91c5942cad1e638f07e0280061d7339dc3583611500888a612589565b60006000805160206128c0833981519152610559565b3330146108775760405162461bcd60e51b81526004016101a090612158565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611688576107ad836119aa565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156116e2575060408051601f3d908101601f191682019092526116df918101906123df565b60015b6117455760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016101a0565b6000805160206128c083398151915281146117b45760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016101a0565b506107ad838383611a46565b6060600082600001519050600080826001600160a01b0316856020015186604001516040516117ef9190612883565b60006040518083038185875af1925050503d806000811461182c576040519150601f19603f3d011682016040523d82523d6000602084013e611831565b606091505b50915091508161184357805160208201fd5b949350505050565b6000805160206129078339815191528054600091906001600160a01b0384811691161480610619575060018101546001600160a01b038481169116149392505050565b6000306001600160a01b038316036118a857506000919050565b6118b182610c10565b156118be57506001919050565b506002919050565b60006118d183611a71565b5050805115801590610c1b57600061190c6040518060600160405280866001600160a01b0316815260200160008152602001858152506117c0565b8051909150632f668f9960e01b9061192d9083016020908101908401612895565b6001600160e01b031916146119a35760405162461bcd60e51b815260206004820152603660248201527f4163636f756e7420557064617465204661696c65643a2076616c696461746f72604482015275081a5b9a5d1a585b1a5e985d1a5bdb8819985a5b195960521b60648201526084016101a0565b5092915050565b6001600160a01b0381163b611a175760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016101a0565b6000805160206128c083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611a4f83611aae565b600082511180611a5c5750805b156107ad57611a6b8383611aee565b50505050565b6001600160a01b03811660009081526000805160206129278339815191526020526040812080548290611aa3906124be565b918290555092915050565b611ab7816119aa565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061061983836040518060600160405280602781526020016128e0602791396060600080856001600160a01b031685604051611b2b9190612883565b600060405180830381855af49150503d8060008114611b66576040519150601f19603f3d011682016040523d82523d6000602084013e611b6b565b606091505b5091509150611b7c86838387611b86565b9695505050505050565b60608315611bf5578251600003611bee576001600160a01b0385163b611bee5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101a0565b5081611843565b6118438383815115611c0a5781518083602001fd5b8060405162461bcd60e51b81526004016101a09190612022565b8183823760009101908152919050565b60008083601f840112611c4657600080fd5b5081356001600160401b03811115611c5d57600080fd5b602083019150836020828501011115611c7557600080fd5b9250929050565b600080600060408486031215611c9157600080fd5b8335925060208401356001600160401b03811115611cae57600080fd5b611cba86828701611c34565b9497909650939450505050565b6001600160a01b038116811461087757600080fd5b600080600080600060808688031215611cf457600080fd5b8535611cff81611cc7565b94506020860135611d0f81611cc7565b93506040860135611d1f81611cc7565b925060608601356001600160401b03811115611d3a57600080fd5b611d4688828901611c34565b969995985093965092949392505050565b600080600060408486031215611d6c57600080fd5b8335611d7781611cc7565b925060208401356001600160401b03811115611cae57600080fd5b8035611d9d81611cc7565b919050565b600060208284031215611db457600080fd5b813561061981611cc7565b60006101608284031215611dd257600080fd5b50919050565b600080600060608486031215611ded57600080fd5b83356001600160401b03811115611e0357600080fd5b611e0f86828701611dbf565b9660208601359650604090950135949350505050565b60008060208385031215611e3857600080fd5b82356001600160401b0380821115611e4f57600080fd5b818501915085601f830112611e6357600080fd5b813581811115611e7257600080fd5b8660208260051b8501011115611e8757600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611ed757611ed7611e99565b604052919050565b600082601f830112611ef057600080fd5b81356001600160401b03811115611f0957611f09611e99565b611f1c601f8201601f1916602001611eaf565b818152846020838601011115611f3157600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611f6157600080fd5b8235611f6c81611cc7565b915060208301356001600160401b03811115611f8757600080fd5b611f9385828601611edf565b9150509250929050565b600080600060608486031215611fb257600080fd5b8335611fbd81611cc7565b95602085013595506040909401359392505050565b60005b83811015611fed578181015183820152602001611fd5565b50506000910152565b6000815180845261200e816020860160208601611fd2565b601f01601f19169290920160200192915050565b6020815260006106196020830184611ff6565b60006020828403121561204757600080fd5b81356001600160401b0381111561205d57600080fd5b61184384828501611dbf565b634e487b7160e01b600052602160045260246000fd5b6003811061209d57634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038316815260408101610619602083018461207f565b600080604083850312156120d157600080fd5b82356120dc81611cc7565b946020939093013593505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b83815260406020820152600061212d6040830184866120ea565b95945050505050565b60006020828403121561214857600080fd5b8151801515811461061957600080fd5b60208082526017908201527f4163636573732044656e6965643a206e6f742073656c66000000000000000000604082015260600190565b60208082526033908201527f4163636f756e7420557064617465204661696c65643a2076616c696461746f726040820152721cc81b5d5cdd08189948191a5999995c995b9d606a1b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000808335601e1984360301811261229157600080fd5b83016020810192503590506001600160401b038111156122b057600080fd5b803603821315611c7557600080fd5b606081526122e0606082016122d386611d92565b6001600160a01b03169052565b6020840135608082015260006122f9604086018661227a565b6101608060a08601526123116101c0860183856120ea565b9250612320606089018961227a565b9250605f19808786030160c088015261233a8585846120ea565b945060808a013560e0880152610100935060a08a013584880152610120915060c08a01358288015261014060e08b013581890152848b013584890152612382838c018c61227a565b95509350818887030161018089015261239c8686866120ea565b95506123aa818c018c61227a565b955093505080878603016101a088015250506123c78383836120ea565b9350505050836020830152611843604083018461207f565b6000602082840312156123f157600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60008235605e1983360301811261242457600080fd5b9190910192915050565b60006060828403121561244057600080fd5b604051606081016001600160401b03828210818311171561246357612463611e99565b816040528293508435915061247782611cc7565b81835260208501356020840152604085013591508082111561249857600080fd5b506124a585828601611edf565b6040830152505092915050565b6000610c1b368361242e565b6000600182016124de57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806124f957607f821691505b602082108103611dd257634e487b7160e01b600052602260045260246000fd5b6000808335601e1984360301811261253057600080fd5b8301803591506001600160401b0382111561254a57600080fd5b602001915036819003821315611c7557600080fd5b6000808585111561256f57600080fd5b8386111561257c57600080fd5b5050820193919092039150565b6001600160e01b031981358181169160048510156125b15780818660040360031b1b83161692505b505092915050565b60208082526023908201527f56616c69646174696f6e204661696c65643a20696e76616c69642063616c6c6460408201526261746160e81b606082015260800190565b6000602080838503121561260f57600080fd5b82356001600160401b038082111561262657600080fd5b818501915085601f83011261263a57600080fd5b81358181111561264c5761264c611e99565b8060051b61265b858201611eaf565b918252838101850191858101908984111561267557600080fd5b86860192505b838310156126b1578235858111156126935760008081fd5b6126a18b89838a010161242e565b835250918601919086019061267b565b9998505050505050505050565b60208082526024908201527f4163636573732044656e6965643a206e6f742063757272656e742076616c696460408201526330ba37b960e11b606082015260800190565b60208082526024908201527f56616c69646174696f6e204661696c65643a20696e76616c69642076616c696460408201526330ba37b960e11b606082015260800190565b601f8211156107ad57600081815260208120601f850160051c8101602086101561276d5750805b601f850160051c820191505b8181101561074357828155600101612779565b6001600160401b038311156127a3576127a3611e99565b6127b7836127b183546124e5565b83612746565b6000601f8411600181146127eb57600085156127d35750838201355b600019600387901b1c1916600186901b178355612845565b600083815260209020601f19861690835b8281101561281c57868501358255602094850194600190920191016127fc565b50868210156128395760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b6020808252601b908201527f496e76616c696420496e7075743a207a65726f20616464726573730000000000604082015260600190565b60008251612424818460208701611fd2565b6000602082840312156128a757600080fd5b81516001600160e01b03198116811461061957600080fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564af306d19573fd404bed876656e4bfdffbbe2cbf74c360f313030ac331a202f008c48e357b146d48b3bd08103a6b1db6a3beec3b5daf56b6ad010e307f6b0fb00a26469706673582212209a9899a2df5947a56b01017ae6b485db4d2af063a1b654638ceed261d407538e64736f6c63430008110033",
    "sourceMap": "906:4676:78:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1263:10:70;1284:20;:18;:20::i;:::-;1263:42;-1:-1:-1;;;;;;1319:16:70;;1315:88;;1351:41;;-1:-1:-1;;;1351:41:70;;216:2:128;1351:41:70;;;198:21:128;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;1351:41:70;;;;;;;;1315:88;1413:12;1427:19;1450:2;-1:-1:-1;;;;;1450:13:70;1464:8;;1450:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1412:61;;;;1766:7;1756:296;;2030:6;2024:13;2017:4;2009:6;2005:17;1998:40;1756:296;2145:6;2139:13;2132:4;2124:6;2120:17;2113:40;1449:142:72;;;;;;;;;;-1:-1:-1;1540:44:72;;-1:-1:-1;;;;;1540:44:72;1449:142;;;-1:-1:-1;;;;;834:32:128;;;816:51;;804:2;789:18;1449:142:72;;;;;;;;4726:448:78;;;;;;;;;;-1:-1:-1;4726:448:78;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1874:33:128;;;1856:52;;1844:2;1829:18;4726:448:78;1712:202:128;1144:360:78;;;;;;;;;;-1:-1:-1;1144:360:78;;;;;:::i;:::-;;:::i;:::-;;2109:340:72;;;;;;;;;;-1:-1:-1;2109:340:72;;;;;:::i;:::-;;:::i;3143:195:47:-;;;;;;;;;;-1:-1:-1;3143:195:47;;;;;:::i;:::-;;:::i;1510:719:78:-;;;;;;;;;;-1:-1:-1;1510:719:78;;;;;:::i;:::-;;:::i;:::-;;;4826:25:128;;;4814:2;4799:18;1510:719:78;4680:177:128;2235:224:78;;;;;;;;;;-1:-1:-1;2235:224:78;;;;;:::i;:::-;;:::i;986:125:69:-;;;;;;;;;;;;;:::i;3657:220:47:-;;;;;;:::i;:::-;;:::i;2762:131::-;;;;;;;;;;;;;:::i;2493:145:72:-;;;;;;;;;;-1:-1:-1;2493:145:72;;;;;:::i;:::-;;:::i;:::-;;;7787:14:128;;7780:22;7762:41;;7750:2;7735:18;2493:145:72;7622:187:128;1264:108:69;;;;;;;;;;-1:-1:-1;1264:108:69;;;;;:::i;:::-;;:::i;2350:291:73:-;;;;;;;;;;-1:-1:-1;2350:291:73;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2465:2255:78:-;;;;;;;;;;-1:-1:-1;2465:2255:78;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1307:136:72:-;;;;;;;;;;;;;:::i;2488:134:70:-;;;;;;;;;;;;;:::i;2764:402:73:-;;;;;;;;;;-1:-1:-1;2764:402:73;;;;;:::i;:::-;;:::i;2035:273::-;;;;;;;;;;-1:-1:-1;2035:273:73;;;;;:::i;:::-;;:::i;1828:165::-;;;;;;;;;;-1:-1:-1;1828:165:73;;;;;:::i;:::-;-1:-1:-1;;;;;1936:42:73;1910:7;1936:42;;;-1:-1:-1;;;;;;;;;;;1936:42:73;;;;;:50;;1828:165;2329:117:70;;;;;;;;;;-1:-1:-1;2329:117:70;;;;;:::i;:::-;;:::i;1686:328:72:-;;;;;;;;;;-1:-1:-1;1686:328:72;;;;;:::i;:::-;;:::i;2488:134:70:-;2539:16;824:66;2574:25;:41;-1:-1:-1;;;;;2574:41:70;;2488:134;-1:-1:-1;2488:134:70:o;4726:448:78:-;4835:17;;4919:32;;;;4930:9;4919:32;:::i;:::-;4864:98;;4991:29;5010:9;4991:18;:29::i;:::-;:99;;;;-1:-1:-1;5040:50:78;;-1:-1:-1;;;5040:50:78;;-1:-1:-1;;;;;5040:33:78;;;;;:50;;5074:4;;5080:9;;;;5040:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4991:176;;-1:-1:-1;;;;;;4991:176:78;;;-1:-1:-1;;;4991:176:78;4972:195;;;4726:448;;;;;;:::o;1144:360::-;3268:19:46;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:46;;3369:1;3354:12;;;;:16;3336:34;3335:97;;;-1:-1:-1;3404:4:46;1702:19:57;:23;;;3376:55:46;;-1:-1:-1;3414:12:46;;;;;:17;3376:55;3314:190;;;;-1:-1:-1;;;3314:190:46;;12573:2:128;3314:190:46;;;12555:21:128;12612:2;12592:18;;;12585:30;12651:34;12631:18;;;12624:62;-1:-1:-1;;;12702:18:128;;;12695:44;12756:19;;3314:190:46;12371:410:128;3314:190:46;3514:12;:16;;-1:-1:-1;;3514:16:46;3529:1;3514:16;;;3540:65;;;;3574:13;:20;;-1:-1:-1;;3574:20:46;;;;;3540:65;1357:26:78::1;1372:10;1357:14;:26::i;:::-;1393:36;1413:15;1393:19;:36::i;:::-;1439:58;1458:14;1474:22;;1439:18;:58::i;:::-;3629:14:46::0;3625:99;;;3675:5;3659:21;;-1:-1:-1;;3659:21:46;;;3699:14;;-1:-1:-1;12938:36:128;;3699:14:46;;12926:2:128;12911:18;3699:14:46;;;;;;;3625:99;3258:472;1144:360:78;;;;;:::o;2109:340:72:-;205:10:71;227:4;205:27;197:63;;;;-1:-1:-1;;;197:63:71;;;;;;;:::i;:::-;2286:19:72::1;:17;:19::i;:::-;-1:-1:-1::0;;;;;2265:40:72::1;:17;-1:-1:-1::0;;;;;2265:40:72::1;::::0;2244:138:::1;;;;-1:-1:-1::0;;;2244:138:72::1;;;;;;;:::i;:::-;2392:50;2414:17;2433:8;;2392:21;:50::i;:::-;2109:340:::0;;;:::o;3143:195:47:-;-1:-1:-1;;;;;1654:6:47;1637:23;1645:4;1637:23;1629:80;;;;-1:-1:-1;;;1629:80:47;;;;;;;:::i;:::-;1751:6;-1:-1:-1;;;;;1727:30:47;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1727:30:47;;1719:87;;;;-1:-1:-1;;;1719:87:47;;;;;;;:::i;:::-;3224:36:::1;3242:17;3224;:36::i;:::-;3311:12;::::0;;3321:1:::1;3311:12:::0;;;::::1;::::0;::::1;::::0;;;3270:61:::1;::::0;3292:17;;3311:12;3270:21:::1;:61::i;:::-;3143:195:::0;:::o;1510:719:78:-;1677:22;891:15:69;:13;:15::i;:::-;-1:-1:-1;;;;;869:38:69;:10;-1:-1:-1;;;;;869:38:69;;848:114;;;;-1:-1:-1;;;848:114:69;;14785:2:128;848:114:69;;;14767:21:128;14824:2;14804:18;;;14797:30;14863:31;14843:18;;;14836:59;14912:18;;848:114:69;14583:353:128;848:114:69;1712:20:78::1;1734:17:::0;1755:25:::1;1773:6;1755:17;:25::i;:::-;1807:54;::::0;-1:-1:-1;;;1807:54:78;;1711:69;;-1:-1:-1;1711:69:78;-1:-1:-1;;;;;;1807:24:78;::::1;::::0;::::1;::::0;:54:::1;::::0;1832:6;;1840:10;;1711:69;;1807:54:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1790:71:::0;-1:-1:-1;1955:268:78;;::::1;;2026:86;::::0;2008:12:::1;::::0;2034:10:::1;::::0;2075:19;;2008:12;2026:86;2008:12;2026:86;2075:19;2034:10;2026:86:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;1955:268:78::1;1701:528;;1510:719:::0;;;;;:::o;2235:224::-;891:15:69;:13;:15::i;:::-;-1:-1:-1;;;;;869:38:69;:10;-1:-1:-1;;;;;869:38:69;;848:114;;;;-1:-1:-1;;;848:114:69;;14785:2:128;848:114:69;;;14767:21:128;14824:2;14804:18;;;14797:30;14863:31;14843:18;;;14836:59;14912:18;;848:114:69;14583:353:128;848:114:69;2314:9:78::1;2309:144;2329:16:::0;;::::1;2309:144;;;2421:21;2433:5;;2439:1;2433:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2421:21;;;:::i;:::-;:11;:21::i;:::-;-1:-1:-1::0;2347:3:78::1;::::0;::::1;:::i;:::-;;;2309:144;;986:125:69::0;1041:11;739:66;1071:22;1728:248;3657:220:47;-1:-1:-1;;;;;1654:6:47;1637:23;1645:4;1637:23;1629:80;;;;-1:-1:-1;;;1629:80:47;;;;;;;:::i;:::-;1751:6;-1:-1:-1;;;;;1727:30:47;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1727:30:47;;1719:87;;;;-1:-1:-1;;;1719:87:47;;;;;;;:::i;:::-;3772:36:::1;3790:17;3772;:36::i;:::-;3818:52;3840:17;3859:4;3865;3818:21;:52::i;:::-;3657:220:::0;;:::o;2762:131::-;2840:7;2080:4;-1:-1:-1;;;;;2089:6:47;2072:23;;2064:92;;;;-1:-1:-1;;;2064:92:47;;19788:2:128;2064:92:47;;;19770:21:128;19827:2;19807:18;;;19800:30;19866:34;19846:18;;;19839:62;19937:26;19917:18;;;19910:54;19981:19;;2064:92:47;19586:420:128;2064:92:47;-1:-1:-1;;;;;;;;;;;;2762:131:47;:::o;2493:145:72:-;2578:4;2601:30;2621:9;2601:19;:30::i;:::-;2594:37;2493:145;-1:-1:-1;;2493:145:72:o;1264:108:69:-;205:10:71;227:4;205:27;197:63;;;;-1:-1:-1;;;197:63:71;;;;;;;:::i;:::-;1339:26:69::1;1354:10;1339:14;:26::i;2350:291:73:-:0;-1:-1:-1;;;;;2528:64:73;;2497:28;2528:64;;;-1:-1:-1;;;;;;;;;;;2528:64:73;;;;;;;;2609:20;;;:11;;;:20;;;;;:25;;;;;;;;;2602:32;;2473:12;;2528:64;2609:25;2602:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2350:291;;;;;:::o;2465:2255:78:-;2558:10;;;2615:15;;;;:6;:15;:::i;:::-;:19;;2632:1;;2615:19;;;:::i;:::-;2608:27;;;:::i;:::-;2590:45;-1:-1:-1;;;;;;;2666:38:78;;-1:-1:-1;;;2666:38:78;2645:120;;;;-1:-1:-1;;;2645:120:78;;;;;;;:::i;:::-;2776:19;2809:15;;;;:6;:15;:::i;:::-;:19;;2825:1;;2809:19;;;:::i;:::-;2798:41;;;;;;;:::i;:::-;2869:12;;2776:63;;-1:-1:-1;2899:13:78;2891:61;;;;-1:-1:-1;;;2891:61:78;;;;;;;:::i;:::-;2963:20;2986:5;2992:1;2986:8;;;;;;;;:::i;:::-;;;;;;;:11;;;2963:34;;3007:17;3027:26;3040:12;3027;:26::i;:::-;3007:46;-1:-1:-1;3170:1:78;3153:522;3177:9;3173:1;:13;3153:522;;;3244:25;3257:5;3263:1;3257:8;;;;;;;;:::i;:::-;;;;;;;:11;;;3244:12;:25::i;:::-;3232:37;;;;;;;;:::i;:::-;:8;:37;;;;;;;;:::i;:::-;;3207:148;;;;-1:-1:-1;;;3207:148:78;;23382:2:128;3207:148:78;;;23364:21:128;23421:2;23401:18;;;23394:30;23460:34;23440:18;;;23433:62;-1:-1:-1;;;23511:18:128;;;23504:50;23571:19;;3207:148:78;23180:416:128;3207:148:78;3463:17;3451:8;:29;;;;;;;;:::i;:::-;;3447:218;;3545:5;3551:1;3545:8;;;;;;;;:::i;:::-;;;;;;;:11;;;-1:-1:-1;;;;;3529:27:78;:12;-1:-1:-1;;;;;3529:27:78;;3500:150;;;;-1:-1:-1;;;3500:150:78;;23803:2:128;3500:150:78;;;23785:21:128;23842:2;23822:18;;;23815:30;23881:34;23861:18;;;23854:62;-1:-1:-1;;;23932:18:128;;;23925:50;23992:19;;3500:150:78;23601:416:128;3500:150:78;3188:3;;;:::i;:::-;;;3153:522;;;-1:-1:-1;3685:17:78;3716:16;;;;:6;:16;:::i;:::-;3705:39;;;;;;;:::i;:::-;3685:59;;3775:41;3805:9;3775:18;:41::i;:::-;3754:124;;;;-1:-1:-1;;;3754:124:78;;;;;;;:::i;:::-;3973:16;3961:8;:28;;;;;;;;:::i;:::-;;3957:306;;4005:25;4033:19;:17;:19::i;:::-;4005:47;;4112:14;-1:-1:-1;;;;;4091:36:78;:9;-1:-1:-1;;;;;4091:36:78;;4066:131;;;;-1:-1:-1;;;4066:131:78;;;;;;;:::i;:::-;4219:14;4235:16;;-1:-1:-1;2465:2255:78;-1:-1:-1;;;;;;;;2465:2255:78:o;3957:306::-;4360:18;4348:8;:30;;;;;;;;:::i;:::-;;4344:248;;4432:12;-1:-1:-1;;;;;4419:25:78;:9;-1:-1:-1;;;;;4419:25:78;;4394:120;;;;-1:-1:-1;;;4394:120:78;;;;;;;:::i;:::-;-1:-1:-1;4547:12:78;;4562:18;;-1:-1:-1;2465:2255:78;-1:-1:-1;;;;;;2465:2255:78:o;4344:248::-;4683:9;4695:17;;-1:-1:-1;2465:2255:78;-1:-1:-1;;;;;;;2465:2255:78:o;1307:136:72:-;1366:10;-1:-1:-1;;;;;;;;;;;1395:26:72;5353:260;2764:402:73;2870:10;2912:30;2870:10;2912:19;:30::i;:::-;2891:113;;;;-1:-1:-1;;;2891:113:73;;;;;;;:::i;:::-;-1:-1:-1;;;;;3045:64:73;;3014:28;3045:64;;;-1:-1:-1;;;;;;;;;;;3045:64:73;;;;;;;;3131:14;;3119:27;;:11;;;:27;;;;;:32;;;;;;;;;:40;3154:5;;3119:32;:40;:::i;2035:273::-;-1:-1:-1;;;;;2188:64:73;;2157:28;2188:64;;;-1:-1:-1;;;;;;;;;;;2188:64:73;;;;;;;;2281:14;;2269:27;;:11;;;:27;;;;;:32;;;;;;;;;2262:39;;2133:12;;2188:64;2269:32;2262:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2035:273;;;;:::o;2329:117:70:-;205:10:71;227:4;205:27;197:63;;;;-1:-1:-1;;;197:63:71;;;;;;;:::i;:::-;2411:28:70::1;2431:7;2411:19;:28::i;1686:328:72:-:0;205:10:71;227:4;205:27;197:63;;;;-1:-1:-1;;;197:63:71;;;;;;;:::i;:::-;1540:44:72;;-1:-1:-1;;;;;1540:44:72;-1:-1:-1;;;;;1836:40:72::1;:14;-1:-1:-1::0;;;;;1836:40:72::1;::::0;1815:138:::1;;;;-1:-1:-1::0;;;1815:138:72::1;;;;;;;:::i;:::-;1963:44;1982:14;1998:8;;1963:18;:44::i;1378:344:69:-:0;-1:-1:-1;;;;;1466:33:69;;1445:107;;;;-1:-1:-1;;;1445:107:69;;;;;;;:::i;:::-;739:66;1649:15;;1631:46;;-1:-1:-1;;;;;1631:46:69;;;;1649:15;;1631:46;;1562:29;;1631:46;1687:28;;-1:-1:-1;;;;;;1687:28:69;-1:-1:-1;;;;;1687:28:69;;;;;;;;;;1378:344::o;2628:447:70:-;2751:4;-1:-1:-1;;;;;2723:33:70;;;2702:107;;;;-1:-1:-1;;;2702:107:70;;27442:2:128;2702:107:70;;;27424:21:128;27481:2;27461:18;;;27454:30;27520:29;27500:18;;;27493:57;27567:18;;2702:107:70;27240:351:128;2702:107:70;-1:-1:-1;;;;;2827:30:70;;2819:70;;;;-1:-1:-1;;;2819:70:70;;;;;;;:::i;:::-;824:66;2998:20;;2975:53;;-1:-1:-1;;;;;2975:53:70;;;;2998:20;;2975:53;;2900:32;;2975:53;3038:30;;-1:-1:-1;;;;;;3038:30:70;-1:-1:-1;;;;;3038:30:70;;;;;;;;;;2628:447::o;2944:648:72:-;-1:-1:-1;;;;;3086:37:72;;3065:111;;;;-1:-1:-1;;;3065:111:72;;;;;;;:::i;:::-;3186:33;-1:-1:-1;;;;;;;;;;;3290:19:72;;-1:-1:-1;;;;;3319:36:72;;;-1:-1:-1;;;;;;3319:36:72;;;;;3384:40;;;;;;;;;;;;;;;;;;;;;;3186:62;;-1:-1:-1;3290:19:72;;;3258:29;;3384:40;;3341:14;;3415:8;;;;;;3384:40;;3415:8;;;;3384:40;;;;;;;;;-1:-1:-1;3384:14:72;;-1:-1:-1;;;3384:40:72:i;:::-;3365:59;-1:-1:-1;;;;;;3439:146:72;;;;;;;3365:59;3559:16;3566:8;;3559:16;:::i;:::-;3439:146;;;27787:14:128;;27780:22;27762:41;;-1:-1:-1;;;;;;27839:33:128;;;27834:2;27819:18;;27812:61;27735:18;3439:146:72;;;;;;;3055:537;;;2944:648;;;:::o;3598:681::-;-1:-1:-1;;;;;3746:40:72;;3725:114;;;;-1:-1:-1;;;3725:114:72;;;;;;;:::i;:::-;3956:22;;;-1:-1:-1;;;;;3988:42:72;;;-1:-1:-1;;;;;;3988:42:72;;;;;;4059:43;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1234:66:72;3956:22;;;;-1:-1:-1;;4059:43:72;;3988:42;;4093:8;;4059:43;;;;;;4093:8;4059:43;;4093:8;4059:43;;;;;;;;;-1:-1:-1;4059:14:72;;-1:-1:-1;;;4059:43:72:i;:::-;4040:62;-1:-1:-1;;;;;;4117:155:72;;;;;;;4040:62;4246:16;4253:8;;4246:16;:::i;1175:140:43:-;1228:7;-1:-1:-1;;;;;;;;;;;1254:48:43;1859:190:60;5180:105:78;205:10:71;227:4;205:27;197:63;;;;-1:-1:-1;;;197:63:71;;;;;;;:::i;2494:922:43:-;689:66;2910:48;;;2906:504;;;2974:37;2993:17;2974:18;:37::i;2906:504::-;3064:17;-1:-1:-1;;;;;3046:50:43;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3046:52:43;;;;;;;;-1:-1:-1;;3046:52:43;;;;;;;;;;;;:::i;:::-;;;3042:291;;3262:56;;-1:-1:-1;;;3262:56:43;;28275:2:128;3262:56:43;;;28257:21:128;28314:2;28294:18;;;28287:30;28353:34;28333:18;;;28326:62;-1:-1:-1;;;28404:18:128;;;28397:44;28458:19;;3262:56:43;28073:410:128;3042:291:43;-1:-1:-1;;;;;;;;;;;3148:28:43;;3140:82;;;;-1:-1:-1;;;3140:82:43;;28690:2:128;3140:82:43;;;28672:21:128;28729:2;28709:18;;;28702:30;28768:34;28748:18;;;28741:62;-1:-1:-1;;;28819:18:128;;;28812:39;28868:19;;3140:82:43;28488:405:128;3140:82:43;3099:138;3346:53;3364:17;3383:4;3389:9;3346:17;:53::i;470:321:88:-;518:12;538:14;555:4;:7;;;538:24;;569:12;583:19;606:6;-1:-1:-1;;;;;606:11:88;626:4;:10;;;648:4;:9;;;606:57;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;568:95;;;;674:7;669:101;;746:6;740:13;735:2;727:6;723:15;716:38;669:101;782:6;470:321;-1:-1:-1;;;;470:321:88:o;2644:294:72:-;-1:-1:-1;;;;;;;;;;;2861:19:72;;2741:4;;1234:66;-1:-1:-1;;;;;2848:32:72;;;2861:19;;2848:32;;:83;;-1:-1:-1;2909:22:72;;;;-1:-1:-1;;;;;2896:35:72;;;2909:22;;2896:35;2829:102;2644:294;-1:-1:-1;;;2644:294:72:o;5291:289:78:-;5348:8;5386:4;-1:-1:-1;;;;;5372:19:78;;;5368:73;;-1:-1:-1;5414:16:78;;5291:289;-1:-1:-1;5291:289:78:o;5368:73::-;5454:34;5484:2;5454:18;:34::i;:::-;5450:90;;;-1:-1:-1;5511:18:78;;5291:289;-1:-1:-1;5291:289:78:o;5450:90::-;-1:-1:-1;5556:17:78;;5291:289;-1:-1:-1;5291:289:78:o;4712:635:72:-;4821:16;4930:20;4940:9;4930;:20::i;:::-;-1:-1:-1;;4974:15:72;;:19;;;;5003:338;;5034:16;5053:101;5082:58;;;;;;;;5101:9;-1:-1:-1;;;;;5082:58:72;;;;;5120:1;5082:58;;;;5129:8;5082:58;;;5053:11;:101::i;:::-;5193:25;;5034:120;;-1:-1:-1;;;;5222:20:72;5193:25;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;5193:49:72;;5168:162;;;;-1:-1:-1;;;5168:162:72;;29687:2:128;5168:162:72;;;29669:21:128;29726:2;29706:18;;;29699:30;29765:34;29745:18;;;29738:62;-1:-1:-1;;;29816:18:128;;;29809:52;29878:19;;5168:162:72;29485:418:128;5168:162:72;5020:321;4712:635;;;;:::o;1406:259:43:-;-1:-1:-1;;;;;1702:19:57;;;1479:95:43;;;;-1:-1:-1;;;1479:95:43;;30110:2:128;1479:95:43;;;30092:21:128;30149:2;30129:18;;;30122:30;30188:34;30168:18;;;30161:62;-1:-1:-1;;;30239:18:128;;;30232:43;30292:19;;1479:95:43;29908:409:128;1479:95:43;-1:-1:-1;;;;;;;;;;;1584:74:43;;-1:-1:-1;;;;;;1584:74:43;-1:-1:-1;;;;;1584:74:43;;;;;;;;;;1406:259::o;2057:265::-;2165:29;2176:17;2165:10;:29::i;:::-;2222:1;2208:4;:11;:15;:28;;;;2227:9;2208:28;2204:112;;;2252:53;2281:17;2300:4;2252:28;:53::i;:::-;;2057:265;;;:::o;3350:166:73:-;-1:-1:-1;;;;;3459:42:73;;3431:7;3459:42;;;-1:-1:-1;;;;;;;;;;;3459:42:73;;;;;3457:52;;3431:7;;3457:52;;;:::i;:::-;;;;;-1:-1:-1;3457:52:73;3350:166;-1:-1:-1;;3350:166:73:o;1771:152:43:-;1837:37;1856:17;1837:18;:37::i;:::-;1889:27;;-1:-1:-1;;;;;1889:27:43;;;;;;;;1771:152;:::o;6674:198:57:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;7199:12;7224;7238:23;7265:6;-1:-1:-1;;;;;7265:19:57;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7223:67;;;;7307:69;7334:6;7342:7;7351:10;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:57:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:57;;;8113:60;;;;-1:-1:-1;;;8113:60:57;;30524:2:128;8113:60:57;;;30506:21:128;30563:2;30543:18;;;30536:30;30602:31;30582:18;;;30575:59;30651:18;;8113:60:57;30322:353:128;8113:60:57;-1:-1:-1;8208:10:57;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:57;;;;;;;;:::i;374:271:128:-;557:6;549;544:3;531:33;513:3;583:16;;608:13;;;583:16;374:271;-1:-1:-1;374:271:128:o;878:347::-;929:8;939:6;993:3;986:4;978:6;974:17;970:27;960:55;;1011:1;1008;1001:12;960:55;-1:-1:-1;1034:20:128;;-1:-1:-1;;;;;1066:30:128;;1063:50;;;1109:1;1106;1099:12;1063:50;1146:4;1138:6;1134:17;1122:29;;1198:3;1191:4;1182:6;1174;1170:19;1166:30;1163:39;1160:59;;;1215:1;1212;1205:12;1160:59;878:347;;;;;:::o;1230:477::-;1309:6;1317;1325;1378:2;1366:9;1357:7;1353:23;1349:32;1346:52;;;1394:1;1391;1384:12;1346:52;1430:9;1417:23;1407:33;;1491:2;1480:9;1476:18;1463:32;-1:-1:-1;;;;;1510:6:128;1507:30;1504:50;;;1550:1;1547;1540:12;1504:50;1589:58;1639:7;1630:6;1619:9;1615:22;1589:58;:::i;:::-;1230:477;;1666:8;;-1:-1:-1;1563:84:128;;-1:-1:-1;;;;1230:477:128:o;1919:144::-;-1:-1:-1;;;;;2007:31:128;;1997:42;;1987:70;;2053:1;2050;2043:12;2068:932;2231:6;2239;2247;2255;2263;2316:3;2304:9;2295:7;2291:23;2287:33;2284:53;;;2333:1;2330;2323:12;2284:53;2372:9;2359:23;2391:44;2429:5;2391:44;:::i;:::-;2454:5;-1:-1:-1;2511:2:128;2496:18;;2483:32;2524:46;2483:32;2524:46;:::i;:::-;2589:7;-1:-1:-1;2648:2:128;2633:18;;2620:32;2661:46;2620:32;2661:46;:::i;:::-;2726:7;-1:-1:-1;2784:2:128;2769:18;;2756:32;-1:-1:-1;;;;;2800:30:128;;2797:50;;;2843:1;2840;2833:12;2797:50;2882:58;2932:7;2923:6;2912:9;2908:22;2882:58;:::i;:::-;2068:932;;;;-1:-1:-1;2068:932:128;;-1:-1:-1;2959:8:128;;2856:84;2068:932;-1:-1:-1;;;2068:932:128:o;3005:577::-;3104:6;3112;3120;3173:2;3161:9;3152:7;3148:23;3144:32;3141:52;;;3189:1;3186;3179:12;3141:52;3228:9;3215:23;3247:44;3285:5;3247:44;:::i;:::-;3310:5;-1:-1:-1;3366:2:128;3351:18;;3338:32;-1:-1:-1;;;;;3382:30:128;;3379:50;;;3425:1;3422;3415:12;3587:147;3655:20;;3684:44;3655:20;3684:44;:::i;:::-;3587:147;;;:::o;3739:260::-;3798:6;3851:2;3839:9;3830:7;3826:23;3822:32;3819:52;;;3867:1;3864;3857:12;3819:52;3906:9;3893:23;3925:44;3963:5;3925:44;:::i;4004:162::-;4070:5;4115:3;4106:6;4101:3;4097:16;4093:26;4090:46;;;4132:1;4129;4122:12;4090:46;-1:-1:-1;4154:6:128;4004:162;-1:-1:-1;4004:162:128:o;4171:504::-;4281:6;4289;4297;4350:2;4338:9;4329:7;4325:23;4321:32;4318:52;;;4366:1;4363;4356:12;4318:52;4406:9;4393:23;-1:-1:-1;;;;;4431:6:128;4428:30;4425:50;;;4471:1;4468;4461:12;4425:50;4494:73;4559:7;4550:6;4539:9;4535:22;4494:73;:::i;:::-;4484:83;4614:2;4599:18;;4586:32;;-1:-1:-1;4665:2:128;4650:18;;;4637:32;;4171:504;-1:-1:-1;;;;4171:504:128:o;4862:640::-;4973:6;4981;5034:2;5022:9;5013:7;5009:23;5005:32;5002:52;;;5050:1;5047;5040:12;5002:52;5090:9;5077:23;-1:-1:-1;;;;;5160:2:128;5152:6;5149:14;5146:34;;;5176:1;5173;5166:12;5146:34;5214:6;5203:9;5199:22;5189:32;;5259:7;5252:4;5248:2;5244:13;5240:27;5230:55;;5281:1;5278;5271:12;5230:55;5321:2;5308:16;5347:2;5339:6;5336:14;5333:34;;;5363:1;5360;5353:12;5333:34;5416:7;5411:2;5401:6;5398:1;5394:14;5390:2;5386:23;5382:32;5379:45;5376:65;;;5437:1;5434;5427:12;5376:65;5468:2;5460:11;;;;;5490:6;;-1:-1:-1;4862:640:128;;-1:-1:-1;;;;4862:640:128:o;5735:127::-;5796:10;5791:3;5787:20;5784:1;5777:31;5827:4;5824:1;5817:15;5851:4;5848:1;5841:15;5867:275;5938:2;5932:9;6003:2;5984:13;;-1:-1:-1;;5980:27:128;5968:40;;-1:-1:-1;;;;;6023:34:128;;6059:22;;;6020:62;6017:88;;;6085:18;;:::i;:::-;6121:2;6114:22;5867:275;;-1:-1:-1;5867:275:128:o;6147:530::-;6189:5;6242:3;6235:4;6227:6;6223:17;6219:27;6209:55;;6260:1;6257;6250:12;6209:55;6296:6;6283:20;-1:-1:-1;;;;;6318:2:128;6315:26;6312:52;;;6344:18;;:::i;:::-;6388:55;6431:2;6412:13;;-1:-1:-1;;6408:27:128;6437:4;6404:38;6388:55;:::i;:::-;6468:2;6459:7;6452:19;6514:3;6507:4;6502:2;6494:6;6490:15;6486:26;6483:35;6480:55;;;6531:1;6528;6521:12;6480:55;6596:2;6589:4;6581:6;6577:17;6570:4;6561:7;6557:18;6544:55;6644:1;6619:16;;;6637:4;6615:27;6608:38;;;;6623:7;6147:530;-1:-1:-1;;;6147:530:128:o;6682:468::-;6759:6;6767;6820:2;6808:9;6799:7;6795:23;6791:32;6788:52;;;6836:1;6833;6826:12;6788:52;6875:9;6862:23;6894:44;6932:5;6894:44;:::i;:::-;6957:5;-1:-1:-1;7013:2:128;6998:18;;6985:32;-1:-1:-1;;;;;7029:30:128;;7026:50;;;7072:1;7069;7062:12;7026:50;7095:49;7136:7;7127:6;7116:9;7112:22;7095:49;:::i;:::-;7085:59;;;6682:468;;;;;:::o;8099:416::-;8196:6;8204;8212;8265:2;8253:9;8244:7;8240:23;8236:32;8233:52;;;8281:1;8278;8271:12;8233:52;8320:9;8307:23;8339:44;8377:5;8339:44;:::i;:::-;8402:5;8454:2;8439:18;;8426:32;;-1:-1:-1;8505:2:128;8490:18;;;8477:32;;8099:416;-1:-1:-1;;;8099:416:128:o;8520:250::-;8605:1;8615:113;8629:6;8626:1;8623:13;8615:113;;;8705:11;;;8699:18;8686:11;;;8679:39;8651:2;8644:10;8615:113;;;-1:-1:-1;;8762:1:128;8744:16;;8737:27;8520:250::o;8775:270::-;8816:3;8854:5;8848:12;8881:6;8876:3;8869:19;8897:76;8966:6;8959:4;8954:3;8950:14;8943:4;8936:5;8932:16;8897:76;:::i;:::-;9027:2;9006:15;-1:-1:-1;;9002:29:128;8993:39;;;;9034:4;8989:50;;8775:270;-1:-1:-1;;8775:270:128:o;9050:217::-;9197:2;9186:9;9179:21;9160:4;9217:44;9257:2;9246:9;9242:18;9234:6;9217:44;:::i;9272:368::-;9364:6;9417:2;9405:9;9396:7;9392:23;9388:32;9385:52;;;9433:1;9430;9423:12;9385:52;9473:9;9460:23;-1:-1:-1;;;;;9498:6:128;9495:30;9492:50;;;9538:1;9535;9528:12;9492:50;9561:73;9626:7;9617:6;9606:9;9602:22;9561:73;:::i;9645:127::-;9706:10;9701:3;9697:20;9694:1;9687:31;9737:4;9734:1;9727:15;9761:4;9758:1;9751:15;9777:236;9857:1;9850:5;9847:12;9837:143;;9902:10;9897:3;9893:20;9890:1;9883:31;9937:4;9934:1;9927:15;9965:4;9962:1;9955:15;9837:143;9989:18;;9777:236::o;10018:324::-;-1:-1:-1;;;;;10242:32:128;;10224:51;;10212:2;10197:18;;10284:52;10332:2;10317:18;;10309:6;10284:52;:::i;10581:348::-;10669:6;10677;10730:2;10718:9;10709:7;10705:23;10701:32;10698:52;;;10746:1;10743;10736:12;10698:52;10785:9;10772:23;10804:44;10842:5;10804:44;:::i;:::-;10867:5;10919:2;10904:18;;;;10891:32;;-1:-1:-1;;;10581:348:128:o;11498:266::-;11586:6;11581:3;11574:19;11638:6;11631:5;11624:4;11619:3;11615:14;11602:43;-1:-1:-1;11690:1:128;11665:16;;;11683:4;11661:27;;;11654:38;;;;11746:2;11725:15;;;-1:-1:-1;;11721:29:128;11712:39;;;11708:50;;11498:266::o;11769:315::-;11954:6;11943:9;11936:25;11997:2;11992;11981:9;11977:18;11970:30;11917:4;12017:61;12074:2;12063:9;12059:18;12051:6;12043;12017:61;:::i;:::-;12009:69;11769:315;-1:-1:-1;;;;;11769:315:128:o;12089:277::-;12156:6;12209:2;12197:9;12188:7;12184:23;12180:32;12177:52;;;12225:1;12222;12215:12;12177:52;12257:9;12251:16;12310:5;12303:13;12296:21;12289:5;12286:32;12276:60;;12332:1;12329;12322:12;12985:347;13187:2;13169:21;;;13226:2;13206:18;;;13199:30;13265:25;13260:2;13245:18;;13238:53;13323:2;13308:18;;12985:347::o;13337:415::-;13539:2;13521:21;;;13578:2;13558:18;;;13551:30;13617:34;13612:2;13597:18;;13590:62;-1:-1:-1;;;13683:2:128;13668:18;;13661:49;13742:3;13727:19;;13337:415::o;13757:408::-;13959:2;13941:21;;;13998:2;13978:18;;;13971:30;14037:34;14032:2;14017:18;;14010:62;-1:-1:-1;;;14103:2:128;14088:18;;14081:42;14155:3;14140:19;;13757:408::o;14170:::-;14372:2;14354:21;;;14411:2;14391:18;;;14384:30;14450:34;14445:2;14430:18;;14423:62;-1:-1:-1;;;14516:2:128;14501:18;;14494:42;14568:3;14553:19;;14170:408::o;15050:500::-;15108:5;15115:6;15175:3;15162:17;15261:2;15257:7;15246:8;15230:14;15226:29;15222:43;15202:18;15198:68;15188:96;;15280:1;15277;15270:12;15188:96;15308:33;;15412:4;15399:18;;;-1:-1:-1;15360:21:128;;-1:-1:-1;;;;;;15429:30:128;;15426:50;;;15472:1;15469;15462:12;15426:50;15519:6;15503:14;15499:27;15492:5;15488:39;15485:59;;;15540:1;15537;15530:12;15555:1982;15816:2;15805:9;15798:21;15828:66;15890:2;15879:9;15875:18;15847:26;15866:6;15847:26;:::i;:::-;-1:-1:-1;;;;;15007:31:128;14995:44;;14941:104;15828:66;15956:4;15948:6;15944:17;15931:31;15925:3;15914:9;15910:19;15903:60;15779:4;16006:57;16057:4;16049:6;16045:17;16037:6;16006:57;:::i;:::-;16082:6;16125:2;16119:3;16108:9;16104:19;16097:31;16151:74;16220:3;16209:9;16205:19;16191:12;16177;16151:74;:::i;:::-;16137:88;;16272:55;16323:2;16315:6;16311:15;16303:6;16272:55;:::i;:::-;16234:93;;16350:2;16346:7;16418:2;16406:9;16398:6;16394:22;16390:31;16384:3;16373:9;16369:19;16362:60;16445:65;16503:6;16487:14;16471;16445:65;:::i;:::-;16431:79;;16572:3;16564:6;16560:16;16547:30;16541:3;16530:9;16526:19;16519:59;16597:3;16587:13;;16661:3;16653:6;16649:16;16636:30;16631:2;16620:9;16616:18;16609:58;16686:3;16676:13;;16750:3;16742:6;16738:16;16725:30;16720:2;16709:9;16705:18;16698:58;16775:3;16839;16831:6;16827:16;16814:30;16809:2;16798:9;16794:18;16787:58;16906:2;16898:6;16894:15;16881:29;16876:2;16865:9;16861:18;16854:57;16958:55;17009:2;17001:6;16997:15;16989:6;16958:55;:::i;:::-;16920:93;;;;17078:2;17066:9;17058:6;17054:22;17050:31;17044:3;17033:9;17029:19;17022:60;17105:65;17163:6;17147:14;17131;17105:65;:::i;:::-;17091:79;;17217:55;17268:2;17260:6;17256:15;17248:6;17217:55;:::i;:::-;17179:93;;;;;17337:2;17325:9;17317:6;17313:22;17309:31;17303:3;17292:9;17288:19;17281:60;;;17358:65;17416:6;17400:14;17384;17358:65;:::i;:::-;17350:73;;;;;17461:6;17454:4;17443:9;17439:20;17432:36;17477:54;17525:4;17514:9;17510:20;17502:6;17477:54;:::i;17542:184::-;17612:6;17665:2;17653:9;17644:7;17640:23;17636:32;17633:52;;;17681:1;17678;17671:12;17633:52;-1:-1:-1;17704:16:128;;17542:184;-1:-1:-1;17542:184:128:o;17941:127::-;18002:10;17997:3;17993:20;17990:1;17983:31;18033:4;18030:1;18023:15;18057:4;18054:1;18047:15;18073:322;18164:4;18222:11;18209:25;18316:2;18312:7;18301:8;18285:14;18281:29;18277:43;18257:18;18253:68;18243:96;;18335:1;18332;18325:12;18243:96;18356:33;;;;;18073:322;-1:-1:-1;;18073:322:128:o;18400:753::-;18451:5;18499:4;18487:9;18482:3;18478:19;18474:30;18471:50;;;18517:1;18514;18507:12;18471:50;18550:2;18544:9;18592:4;18584:6;18580:17;-1:-1:-1;;;;;18684:6:128;18672:10;18669:22;18664:2;18652:10;18649:18;18646:46;18643:72;;;18695:18;;:::i;:::-;18735:10;18731:2;18724:22;18764:6;18755:15;;18807:9;18794:23;18779:38;;18826:46;18864:7;18826:46;:::i;:::-;18896:7;18888:6;18881:23;18965:2;18954:9;18950:18;18937:32;18932:2;18924:6;18920:15;18913:57;19021:2;19010:9;19006:18;18993:32;18979:46;;19048:2;19040:6;19037:14;19034:34;;;19064:1;19061;19054:12;19034:34;;19101:45;19142:3;19133:6;19122:9;19118:22;19101:45;:::i;:::-;19096:2;19088:6;19084:15;19077:70;;;18400:753;;;;:::o;19158:186::-;19256:9;19293:45;19323:14;19316:5;19293:45;:::i;19349:232::-;19388:3;19409:17;;;19406:140;;19468:10;19463:3;19459:20;19456:1;19449:31;19503:4;19500:1;19493:15;19531:4;19528:1;19521:15;19406:140;-1:-1:-1;19573:1:128;19562:13;;19349:232::o;20011:380::-;20090:1;20086:12;;;;20133;;;20154:61;;20208:4;20200:6;20196:17;20186:27;;20154:61;20261:2;20253:6;20250:14;20230:18;20227:38;20224:161;;20307:10;20302:3;20298:20;20295:1;20288:31;20342:4;20339:1;20332:15;20370:4;20367:1;20360:15;20396:521;20473:4;20479:6;20539:11;20526:25;20633:2;20629:7;20618:8;20602:14;20598:29;20594:43;20574:18;20570:68;20560:96;;20652:1;20649;20642:12;20560:96;20679:33;;20731:20;;;-1:-1:-1;;;;;;20763:30:128;;20760:50;;;20806:1;20803;20796:12;20760:50;20839:4;20827:17;;-1:-1:-1;20870:14:128;20866:27;;;20856:38;;20853:58;;;20907:1;20904;20897:12;20922:331;21027:9;21038;21080:8;21068:10;21065:24;21062:44;;;21102:1;21099;21092:12;21062:44;21131:6;21121:8;21118:20;21115:40;;;21151:1;21148;21141:12;21115:40;-1:-1:-1;;21177:23:128;;;21222:25;;;;;-1:-1:-1;20922:331:128:o;21258:323::-;-1:-1:-1;;;;;;21378:19:128;;21454:11;;;;21485:1;21477:10;;21474:101;;;21562:2;21556;21549:3;21546:1;21542:11;21539:1;21535:19;21531:28;21527:2;21523:37;21519:46;21510:55;;21474:101;;;21258:323;;;;:::o;21586:399::-;21788:2;21770:21;;;21827:2;21807:18;;;21800:30;21866:34;21861:2;21846:18;;21839:62;-1:-1:-1;;;21932:2:128;21917:18;;21910:33;21975:3;21960:19;;21586:399::o;21990:1185::-;22097:6;22128:2;22171;22159:9;22150:7;22146:23;22142:32;22139:52;;;22187:1;22184;22177:12;22139:52;22227:9;22214:23;-1:-1:-1;;;;;22297:2:128;22289:6;22286:14;22283:34;;;22313:1;22310;22303:12;22283:34;22351:6;22340:9;22336:22;22326:32;;22396:7;22389:4;22385:2;22381:13;22377:27;22367:55;;22418:1;22415;22408:12;22367:55;22454:2;22441:16;22476:2;22472;22469:10;22466:36;;;22482:18;;:::i;:::-;22528:2;22525:1;22521:10;22551:28;22575:2;22571;22567:11;22551:28;:::i;:::-;22613:15;;;22683:11;;;22679:20;;;22644:12;;;;22711:19;;;22708:39;;;22743:1;22740;22733:12;22708:39;22775:2;22771;22767:11;22756:22;;22787:358;22803:6;22798:3;22795:15;22787:358;;;22889:3;22876:17;22925:2;22912:11;22909:19;22906:109;;;22969:1;22998:2;22994;22987:14;22906:109;23040:62;23094:7;23089:2;23075:11;23071:2;23067:20;23063:29;23040:62;:::i;:::-;23028:75;;-1:-1:-1;22820:12:128;;;;23123;;;;22787:358;;;23164:5;21990:1185;-1:-1:-1;;;;;;;;;21990:1185:128:o;24022:400::-;24224:2;24206:21;;;24263:2;24243:18;;;24236:30;24302:34;24297:2;24282:18;;24275:62;-1:-1:-1;;;24368:2:128;24353:18;;24346:34;24412:3;24397:19;;24022:400::o;24427:::-;24629:2;24611:21;;;24668:2;24648:18;;;24641:30;24707:34;24702:2;24687:18;;24680:62;-1:-1:-1;;;24773:2:128;24758:18;;24751:34;24817:3;24802:19;;24427:400::o;24957:544::-;25058:2;25053:3;25050:11;25047:448;;;25094:1;25119:5;25115:2;25108:17;25164:4;25160:2;25150:19;25234:2;25222:10;25218:19;25215:1;25211:27;25205:4;25201:38;25270:4;25258:10;25255:20;25252:47;;;-1:-1:-1;25293:4:128;25252:47;25348:2;25343:3;25339:12;25336:1;25332:20;25326:4;25322:31;25312:41;;25403:82;25421:2;25414:5;25411:13;25403:82;;;25466:17;;;25447:1;25436:13;25403:82;;25677:1202;-1:-1:-1;;;;;25794:3:128;25791:27;25788:53;;;25821:18;;:::i;:::-;25850:93;25939:3;25899:38;25931:4;25925:11;25899:38;:::i;:::-;25893:4;25850:93;:::i;:::-;25969:1;25994:2;25989:3;25986:11;26011:1;26006:615;;;;26665:1;26682:3;26679:93;;;-1:-1:-1;26738:19:128;;;26725:33;26679:93;-1:-1:-1;;25634:1:128;25630:11;;;25626:24;25622:29;25612:40;25658:1;25654:11;;;25609:57;26785:78;;25979:894;;26006:615;24904:1;24897:14;;;24941:4;24928:18;;-1:-1:-1;;26042:17:128;;;26142:9;26164:229;26178:7;26175:1;26172:14;26164:229;;;26267:19;;;26254:33;26239:49;;26374:4;26359:20;;;;26327:1;26315:14;;;;26194:12;26164:229;;;26168:3;26421;26412:7;26409:16;26406:159;;;26545:1;26541:6;26535:3;26529;26526:1;26522:11;26518:21;26514:34;26510:39;26497:9;26492:3;26488:19;26475:33;26471:79;26463:6;26456:95;26406:159;;;26608:1;26602:3;26599:1;26595:11;26591:19;26585:4;26578:33;25979:894;;;25677:1202;;;:::o;26884:351::-;27086:2;27068:21;;;27125:2;27105:18;;;27098:30;27164:29;27159:2;27144:18;;27137:57;27226:2;27211:18;;26884:351::o;28898:287::-;29027:3;29065:6;29059:13;29081:66;29140:6;29135:3;29128:4;29120:6;29116:17;29081:66;:::i;29190:290::-;29259:6;29312:2;29300:9;29291:7;29287:23;29283:32;29280:52;;;29328:1;29325;29318:12;29280:52;29354:16;;-1:-1:-1;;;;;;29399:32:128;;29389:43;;29379:71;;29446:1;29443;29436:12",
    "linkReferences": {},
    "immutableReferences": {
      "49627": [
        {
          "start": 1980,
          "length": 32
        },
        {
          "start": 2044,
          "length": 32
        },
        {
          "start": 2734,
          "length": 32
        },
        {
          "start": 2798,
          "length": 32
        },
        {
          "start": 2922,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "execute((address,uint256,bytes)[])": "3f707e6b",
    "getEntryPoint()": "44ab613f",
    "getExternalValidator()": "0e486e60",
    "getFallbackHandler()": "856dfd99",
    "getOwnerValidator()": "7fcf4a69",
    "getSpaceVersion(address)": "ec283494",
    "getValidationInfo((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": "77b326f8",
    "getValue(address,bytes32)": "9cf6d236",
    "getValue(address,uint256,bytes32)": "7292b791",
    "initialize(address,address,address,bytes)": "246581f7",
    "isCurrentValidator(address)": "55614fcc",
    "isValidSignature(bytes32,bytes)": "1626ba7e",
    "proxiableUUID()": "52d1902d",
    "setEntryPoint(address)": "584465f2",
    "setExternalValidator(address,bytes)": "27395ac7",
    "setFallbackHandler(address)": "f08a0323",
    "setOwnerValidator(address,bytes)": "f1f1e1d9",
    "setValue(bytes32,bytes)": "9358adf5",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": "3a871cdd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IEntryPoint\",\"name\":\"prevEntryPoint\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IEntryPoint\",\"name\":\"curEntryPoint\",\"type\":\"address\"}],\"name\":\"EntryPointChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IValidator\",\"name\":\"prevExternalValidator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IValidator\",\"name\":\"curExternalValidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasInitCall\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"initSelector\",\"type\":\"bytes4\"}],\"name\":\"ExternalValidatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IFallbackHandler\",\"name\":\"previousHandler\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IFallbackHandler\",\"name\":\"currentHandler\",\"type\":\"address\"}],\"name\":\"FallbackHandlerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IValidator\",\"name\":\"prevOwnerValidator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IValidator\",\"name\":\"curOwnerValidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hasInitCall\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"initSelector\",\"type\":\"bytes4\"}],\"name\":\"OwnerValidatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExternalValidator\",\"outputs\":[{\"internalType\":\"contract IValidator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackHandler\",\"outputs\":[{\"internalType\":\"contract IFallbackHandler\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerValidator\",\"outputs\":[{\"internalType\":\"contract IValidator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IValidator\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"getSpaceVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getValidationInfo\",\"outputs\":[{\"internalType\":\"contract IValidator\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum OpTarget\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IValidator\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IValidator\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"internalType\":\"contract IFallbackHandler\",\"name\":\"fallbackHandler\",\"type\":\"address\"},{\"internalType\":\"contract IValidator\",\"name\":\"ownerValidator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ownerValidatorInitData\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IValidator\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"isCurrentValidator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"entryPoint\",\"type\":\"address\"}],\"name\":\"setEntryPoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IValidator\",\"name\":\"externalValidator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"name\":\"setExternalValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFallbackHandler\",\"name\":\"handler\",\"type\":\"address\"}],\"name\":\"setFallbackHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IValidator\",\"name\":\"ownerValidator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"name\":\"setOwnerValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"setValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execute((address,uint256,bytes)[])\":{\"params\":{\"calls\":\"An array of `Call` to be executed. See `Call` in `Exec`.\"}},\"getExternalValidator()\":{\"returns\":{\"_0\":\"ExternalValidator The current `ExternalValidator` of the account.\"}},\"getOwnerValidator()\":{\"returns\":{\"_0\":\"OwnerValidator The current `OwnerValidator` of the account.\"}},\"getSpaceVersion(address)\":{\"params\":{\"validator\":\"The validator to query.\"},\"returns\":{\"_0\":\"The latest version of the storage space of the validator.\"}},\"getValidationInfo((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"The user operation to be validated.\"},\"returns\":{\"_0\":\"validator The validator used to validate the user operation.\",\"_1\":\"target The target of the user operation, see `OpTarget` in `IValidator`.\"}},\"getValue(address,bytes32)\":{\"params\":{\"key\":\"The key to the value.\",\"validator\":\"The validator to query.\"},\"returns\":{\"_0\":\"The value stored. Returns an empty bytes if the key does not exist.\"}},\"getValue(address,uint256,bytes32)\":{\"params\":{\"key\":\"The key to the value.\",\"validator\":\"The validator to query.\",\"version\":\"The version of the storage space to query.\"},\"returns\":{\"_0\":\"The value stored. Returns an empty bytes if the key does not exist.\"}},\"isCurrentValidator(address)\":{\"params\":{\"validator\":\"The validator to query.\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"setEntryPoint(address)\":{\"details\":\"Emit an `EntryPointChanged` event if successful.\",\"params\":{\"entryPoint\":\"The address of the new `EntryPoint` contract. It can NOT be a zero address.\"}},\"setExternalValidator(address,bytes)\":{\"details\":\"Emit an `ExternalValidatorChanged` event if successful.\",\"params\":{\"externalValidator\":\"The address of the new `ExternalValidator` contract. It can NOT be the same as `OwnerValidator` or a zero address.\",\"initData\":\"The initialization call data.\"}},\"setFallbackHandler(address)\":{\"details\":\"Emit a `FallbackHandlerChanged` event if successful.\",\"params\":{\"handler\":\"The address of the new `FallbackHandler` contract. It can NOT be the contract itself or a zero address.\"}},\"setOwnerValidator(address,bytes)\":{\"details\":\"Emit an `OwnerValidatorChanged` event if successful.\",\"params\":{\"initData\":\"The initialization call data.\",\"ownerValidator\":\"The address of the new `OwnerValidator` contract. It can NOT be the same as `ExternalValidator` or a zero address.\"}},\"setValue(bytes32,bytes)\":{\"params\":{\"key\":\"The key to the value.\",\"value\":\"The value to store.\"}},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"missing funds on the account's deposit in the entrypoint.      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.      The excess is left as a deposit in the entrypoint, for future calls.      can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\"      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.\",\"userOp\":\"the operation that is about to be executed.\",\"userOpHash\":\"hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"EntryPointChanged(address,address)\":{\"notice\":\"Emitted when the entry point is changed. If `prevEntryPoint` equals to zero address, this event indicates initalization.\"},\"ExternalValidatorChanged(address,address,bool,bytes4)\":{\"notice\":\"Emitted when the `ExternalValidator` is changed. If `prevExternalValidator` equals to zero address, this event indicates initalization.\"},\"FallbackHandlerChanged(address,address)\":{\"notice\":\"Emitted when the fallback handler is changed. If `previousHandler` equals to zero address, this event indicates initalization.\"},\"OwnerValidatorChanged(address,address,bool,bytes4)\":{\"notice\":\"Emitted when the `OwnerValidator` is changed. If `prevOwnerValidator` equals to zero address, this event indicates initalization.\"}},\"kind\":\"user\",\"methods\":{\"execute((address,uint256,bytes)[])\":{\"notice\":\"Execute call(s) on imAccount\"},\"getEntryPoint()\":{\"notice\":\"Get the `EntryPoint` contract.\"},\"getExternalValidator()\":{\"notice\":\"Get the current `ExternalValidator` of the account.\"},\"getFallbackHandler()\":{\"notice\":\"inheritdoc IFallbackManager\"},\"getOwnerValidator()\":{\"notice\":\"Get the current `OwnerValidator` of the account.\"},\"getSpaceVersion(address)\":{\"notice\":\"Get the latest version of the storage space of a validator.\"},\"getValidationInfo((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Get the validation information of a user operation, including the validator used to validate the user operation and the target of the user operation, see `OpTarget` in `IValidator`.\"},\"getValue(address,bytes32)\":{\"notice\":\"Get the value stored in the latest version of the storage space of a validator.\"},\"getValue(address,uint256,bytes32)\":{\"notice\":\"Get the value stored in a specific version of the storage space of a validator.\"},\"isCurrentValidator(address)\":{\"notice\":\"Query if a validator is currently the registered `OwnerValidator` or `ExternalValidator` of the account.\"},\"setEntryPoint(address)\":{\"notice\":\"Authorization method: `SelfAuth.onlySelf`.\"},\"setExternalValidator(address,bytes)\":{\"notice\":\"Authorization method: `SelfAuth.onlySelf`.\"},\"setFallbackHandler(address)\":{\"notice\":\"Authorization method: `SelfAuth.onlySelf`.\"},\"setOwnerValidator(address,bytes)\":{\"notice\":\"Authorization method: `SelfAuth.onlySelf`.\"},\"setValue(bytes32,bytes)\":{\"notice\":\"The validator MUST be the currently registered validator of the account.\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/account/imAccount.sol\":\"imAccount\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aa/=lib/account-abstraction/contracts/\",\":@account-abstraction/contracts/=lib/account-abstraction/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@oz-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":@pimlico-paymaster/=lib/erc20-paymaster-contracts/src/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":balance-snapshot/=lib/balance-snapshot/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc20-paymaster-contracts/=lib/erc20-paymaster-contracts/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"lib/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"lib/account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1155Receiver.sol\":{\"keccak256\":\"0xdffd96e40500212217d1267d1fa5eb294fe72ce5419638d6801996e0485580b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45d13d37bb0993b369d940fc724219d2dfcb6f265db8f8c337ee5f9c351317e7\",\"dweb:/ipfs/QmVkxaGAjR55DkFASE82h1DqCk4Tvhdh9diMS6m7aVWuYH\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0x7bd5dc796c245d4c52836610455d172cdfcc1f8dcf0d9b1c4cbde212fde02965\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2305d1c655365cb05fa89cfbf2725cb68f3c6adf5d73da0176cc01bedebe961\",\"dweb:/ipfs/QmS3tu5EST14obbRvPRTm4h8Etfjn3vSfsW3CnbNd4ho8W\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/account/base/EntryManager.sol\":{\"keccak256\":\"0x5186b4a33b1ccca247d192cc549524d30119c396525748edfd5aa15361bf8b0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://624292f1fb93e6db3f3ba338cc05f019fd4f1d529dc8ccad6d91c24f30616cb7\",\"dweb:/ipfs/QmXG9gMvKXPR3Pr2KsqwXKv3NBU21XBbLyNncbTeaHKp5W\"]},\"src/account/base/FallbackManager.sol\":{\"keccak256\":\"0xb6eb01653aad2235f46eacd96dc78ed6afd8c75650e000646cbd3de6e0eb36fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fffa2ed77d7faff70484d22e3f2d0300130763b7eac76ce94402230833b434a4\",\"dweb:/ipfs/QmWVJLeuP5yApHijvGLZL8SVzin6T9NgSLoWZNQqQRB2UG\"]},\"src/account/base/SelfAuth.sol\":{\"keccak256\":\"0x8ee61c9841af3b350763c1bdd424b4520a408d1eb2820fdc65e093cab245de61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd24eacca8e07d9764d1b5c8c539d8aa47605393f85612412f0bc43f7048df32\",\"dweb:/ipfs/QmXwqnDoYZQ9tAfNWvUeKqPABtUSS9yQHHbkvJoN9AEvUa\"]},\"src/account/base/ValidatorManager.sol\":{\"keccak256\":\"0x23d08b8652890befeed30ffe832b5a9dde63052794b4c2946a72a08945bb8745\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d350ec09621733fd7dbe88782c4e0d35295448ef35940c34e1ce6825cf3fea08\",\"dweb:/ipfs/QmSEraW4wn1ZcbyMsMMoErAAMRvTfHt2xbcGndeb2aU9QM\"]},\"src/account/base/ValidatorSpace.sol\":{\"keccak256\":\"0x6dbfb7c262a080397dc91c50fdfeee746516a69e5cefa173b1916c7d783d23cd\",\"urls\":[\"bzz-raw://d699050ccbb2b5e44c198b41977c33e44287e45081661261f9953d3ac9de4994\",\"dweb:/ipfs/QmPXc1b8Wrv2bfCwLXb3WxBxKqek3ojAGSZGJevvr98iaL\"]},\"src/account/imAccount.sol\":{\"keccak256\":\"0xbdfa582547ce29c8f3113c9d6b7c50692aad600ed2017eadcb2a1d4b9326b1b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1ccb9240b2c61686829d859a660c60dd99d5ba7ecdd0647fb3a01eecb99a67d\",\"dweb:/ipfs/QmbFNShfduay68sKAqWk7ruNVmxWbhrnTGjRYvRUd34nLM\"]},\"src/account/interfaces/IEntryManager.sol\":{\"keccak256\":\"0xb97b1d45e447da42c83c2767272b12f04d63526ecbecd917ed98b69198565cab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f37da231b0009387f00b35a2767cf8ce4c2ecf16c842e51fd7817bdc4acf3f06\",\"dweb:/ipfs/QmP812iz8UWzjiWz3SUUmB9y4taYXJSwBz4qLRGDDJAPiN\"]},\"src/account/interfaces/IFallbackHandler.sol\":{\"keccak256\":\"0x6a35ebdc98db09f86ae7aa1be034558a8c5af818f4039e476c4142bd08b76d3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f0b96b6db2f039ac439d82c468622206c08a5b410e807c419f6d94729a4b728\",\"dweb:/ipfs/Qmddyj5kfNRi5TpgXmfVbBacfEnYG9CpQckrdoT7WS2KRB\"]},\"src/account/interfaces/IFallbackManager.sol\":{\"keccak256\":\"0x89eae22cc8b3b9c431efbcf9cca504a7a422789628fceeb30b408fbae3a0949f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46f3f7970791c7b9c516e30267a699afa4c6d37861f9c07c7c65daf2be1cb8fc\",\"dweb:/ipfs/QmRBxTtDeq7mPthxyz6MBAigGyc7Xb71YHJiV1cbt4x2nK\"]},\"src/account/interfaces/IValidator.sol\":{\"keccak256\":\"0xfdd1468300c945e01a6e66bb3fc81d72d89ee61273cc92149f3a4a84faf54571\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59380d55e7ab04ddf3b327043d4c2c2ff7a957dbb9cb4b7c0acd7d45519a9570\",\"dweb:/ipfs/QmRpjTTKh8cpjHEr86jxEL1dRVFdzGp1FDdeZP4DtSenhz\"]},\"src/account/interfaces/IValidatorManager.sol\":{\"keccak256\":\"0xcdb4ca29dd111a1f655cdd47ce25a9b08a8a517af4484f654b95407a0e1b648f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://578b07ab014b7d778c3c0de5cc26362494cfd1edbd2d6f19e279b15bc13e914c\",\"dweb:/ipfs/Qmb3S9ZpQLTZ1JDFfwqLdXaSdEaPibwDTdCP4WWxN4Qg5H\"]},\"src/account/interfaces/IValidatorSpace.sol\":{\"keccak256\":\"0x28689530ad6f575ccf0c65ffa45b4a7b68eee3a698775e0a33658e0dc6062267\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de5283fed087cfdfcc8737792bdd74ef9006f2010a606ff6e036a43aea58e904\",\"dweb:/ipfs/QmTbk1bP6crzhuoe1NApjCMrhxteqMuc1p8S2SzpuWYhBh\"]},\"src/account/interfaces/IimAccount.sol\":{\"keccak256\":\"0x983eb8f5ecca0fc07567da790268b6462d2a46af33d327c44ad1fe65597084e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9096c260ce080ebdced435b8f8a7705e1ff944bc417b33c919267f7423b70aac\",\"dweb:/ipfs/QmfQJXFWTNhRSUNPVW3GYhAEs1uhZDuJTAHZw3QPTVmLL2\"]},\"src/account/libraries/Constant.sol\":{\"keccak256\":\"0xff9259b11129757d2f7e29c0a37ae945e262b970ca9499661915f97f4a4bba2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9f8cd4179a76ed6b98a4e1170364bf52279eb6bad65fe287be455cc49be7c33\",\"dweb:/ipfs/QmewM6VH4FsdfNEGU6odti25PHyRgVojuBh1SpPbg1GuZe\"]},\"src/account/libraries/Exec.sol\":{\"keccak256\":\"0x1e3b1bf878a41be9d20c951f71551c6e350460df608812d439e451cd1674719f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50ed37352aa10bad47835d3965c7767924999e5fde00794cf36eac7ae37f8f4f\",\"dweb:/ipfs/QmQn6cRupTcpEi5SvJCuF1cFxDxK4Atm5X3zmdtiQGsch8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "prevEntryPoint",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IEntryPoint",
              "name": "curEntryPoint",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "EntryPointChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IValidator",
              "name": "prevExternalValidator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IValidator",
              "name": "curExternalValidator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "hasInitCall",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "initSelector",
              "type": "bytes4",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ExternalValidatorChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IFallbackHandler",
              "name": "previousHandler",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IFallbackHandler",
              "name": "currentHandler",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FallbackHandlerChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IValidator",
              "name": "prevOwnerValidator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IValidator",
              "name": "curOwnerValidator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "hasInitCall",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "initSelector",
              "type": "bytes4",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OwnerValidatorChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "struct Call[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntryPoint",
          "outputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getExternalValidator",
          "outputs": [
            {
              "internalType": "contract IValidator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFallbackHandler",
          "outputs": [
            {
              "internalType": "contract IFallbackHandler",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOwnerValidator",
          "outputs": [
            {
              "internalType": "contract IValidator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IValidator",
              "name": "validator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSpaceVersion",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getValidationInfo",
          "outputs": [
            {
              "internalType": "contract IValidator",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "enum OpTarget",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IValidator",
              "name": "validator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "version",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getValue",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IValidator",
              "name": "validator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getValue",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "entryPoint",
              "type": "address"
            },
            {
              "internalType": "contract IFallbackHandler",
              "name": "fallbackHandler",
              "type": "address"
            },
            {
              "internalType": "contract IValidator",
              "name": "ownerValidator",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "ownerValidatorInitData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "contract IValidator",
              "name": "validator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isCurrentValidator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "magicValue",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "entryPoint",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setEntryPoint"
        },
        {
          "inputs": [
            {
              "internalType": "contract IValidator",
              "name": "externalValidator",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "initData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setExternalValidator"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFallbackHandler",
              "name": "handler",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFallbackHandler"
        },
        {
          "inputs": [
            {
              "internalType": "contract IValidator",
              "name": "ownerValidator",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "initData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwnerValidator"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setValue"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "missingAccountFunds",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateUserOp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "validationData",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "execute((address,uint256,bytes)[])": {
            "params": {
              "calls": "An array of `Call` to be executed. See `Call` in `Exec`."
            }
          },
          "getExternalValidator()": {
            "returns": {
              "_0": "ExternalValidator The current `ExternalValidator` of the account."
            }
          },
          "getOwnerValidator()": {
            "returns": {
              "_0": "OwnerValidator The current `OwnerValidator` of the account."
            }
          },
          "getSpaceVersion(address)": {
            "params": {
              "validator": "The validator to query."
            },
            "returns": {
              "_0": "The latest version of the storage space of the validator."
            }
          },
          "getValidationInfo((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
            "params": {
              "userOp": "The user operation to be validated."
            },
            "returns": {
              "_0": "validator The validator used to validate the user operation.",
              "_1": "target The target of the user operation, see `OpTarget` in `IValidator`."
            }
          },
          "getValue(address,bytes32)": {
            "params": {
              "key": "The key to the value.",
              "validator": "The validator to query."
            },
            "returns": {
              "_0": "The value stored. Returns an empty bytes if the key does not exist."
            }
          },
          "getValue(address,uint256,bytes32)": {
            "params": {
              "key": "The key to the value.",
              "validator": "The validator to query.",
              "version": "The version of the storage space to query."
            },
            "returns": {
              "_0": "The value stored. Returns an empty bytes if the key does not exist."
            }
          },
          "isCurrentValidator(address)": {
            "params": {
              "validator": "The validator to query."
            }
          },
          "isValidSignature(bytes32,bytes)": {
            "details": "Should return whether the signature provided is valid for the provided data",
            "params": {
              "hash": "Hash of the data to be signed",
              "signature": "Signature byte array associated with _data"
            }
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "setEntryPoint(address)": {
            "details": "Emit an `EntryPointChanged` event if successful.",
            "params": {
              "entryPoint": "The address of the new `EntryPoint` contract. It can NOT be a zero address."
            }
          },
          "setExternalValidator(address,bytes)": {
            "details": "Emit an `ExternalValidatorChanged` event if successful.",
            "params": {
              "externalValidator": "The address of the new `ExternalValidator` contract. It can NOT be the same as `OwnerValidator` or a zero address.",
              "initData": "The initialization call data."
            }
          },
          "setFallbackHandler(address)": {
            "details": "Emit a `FallbackHandlerChanged` event if successful.",
            "params": {
              "handler": "The address of the new `FallbackHandler` contract. It can NOT be the contract itself or a zero address."
            }
          },
          "setOwnerValidator(address,bytes)": {
            "details": "Emit an `OwnerValidatorChanged` event if successful.",
            "params": {
              "initData": "The initialization call data.",
              "ownerValidator": "The address of the new `OwnerValidator` contract. It can NOT be the same as `ExternalValidator` or a zero address."
            }
          },
          "setValue(bytes32,bytes)": {
            "params": {
              "key": "The key to the value.",
              "value": "The value to store."
            }
          },
          "upgradeTo(address)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "details": "Must validate caller is the entryPoint.      Must validate the signature and nonce",
            "params": {
              "missingAccountFunds": "missing funds on the account's deposit in the entrypoint.      This is the minimum amount to transfer to the sender(entryPoint) to be able to make the call.      The excess is left as a deposit in the entrypoint, for future calls.      can be withdrawn anytime using \"entryPoint.withdrawTo()\"      In case there is a paymaster in the request (or the current deposit is high enough), this value will be zero.",
              "userOp": "the operation that is about to be executed.",
              "userOpHash": "hash of the user's request data. can be used as the basis for signature."
            },
            "returns": {
              "validationData": "packaged ValidationData structure. use `_packValidationData` and `_unpackValidationData` to encode and decode      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \"authorizer\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"      <6-byte> validAfter - first timestamp this operation is valid      If an account doesn't use time-range, it is enough to return SIG_VALIDATION_FAILED value (1) for signature failure.      Note that the validation code cannot use block.timestamp (or block.number) directly."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "execute((address,uint256,bytes)[])": {
            "notice": "Execute call(s) on imAccount"
          },
          "getEntryPoint()": {
            "notice": "Get the `EntryPoint` contract."
          },
          "getExternalValidator()": {
            "notice": "Get the current `ExternalValidator` of the account."
          },
          "getFallbackHandler()": {
            "notice": "inheritdoc IFallbackManager"
          },
          "getOwnerValidator()": {
            "notice": "Get the current `OwnerValidator` of the account."
          },
          "getSpaceVersion(address)": {
            "notice": "Get the latest version of the storage space of a validator."
          },
          "getValidationInfo((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
            "notice": "Get the validation information of a user operation, including the validator used to validate the user operation and the target of the user operation, see `OpTarget` in `IValidator`."
          },
          "getValue(address,bytes32)": {
            "notice": "Get the value stored in the latest version of the storage space of a validator."
          },
          "getValue(address,uint256,bytes32)": {
            "notice": "Get the value stored in a specific version of the storage space of a validator."
          },
          "isCurrentValidator(address)": {
            "notice": "Query if a validator is currently the registered `OwnerValidator` or `ExternalValidator` of the account."
          },
          "setEntryPoint(address)": {
            "notice": "Authorization method: `SelfAuth.onlySelf`."
          },
          "setExternalValidator(address,bytes)": {
            "notice": "Authorization method: `SelfAuth.onlySelf`."
          },
          "setFallbackHandler(address)": {
            "notice": "Authorization method: `SelfAuth.onlySelf`."
          },
          "setOwnerValidator(address,bytes)": {
            "notice": "Authorization method: `SelfAuth.onlySelf`."
          },
          "setValue(bytes32,bytes)": {
            "notice": "The validator MUST be the currently registered validator of the account."
          },
          "validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)": {
            "notice": "Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \"simulation call\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aa/=lib/account-abstraction/contracts/",
        "@account-abstraction/contracts/=lib/account-abstraction/contracts/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@oz-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@oz/=lib/openzeppelin-contracts/contracts/",
        "@pimlico-paymaster/=lib/erc20-paymaster-contracts/src/",
        "account-abstraction/=lib/account-abstraction/contracts/",
        "balance-snapshot/=lib/balance-snapshot/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc20-paymaster-contracts/=lib/erc20-paymaster-contracts/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/account/imAccount.sol": "imAccount"
      },
      "evmVersion": "london",
      "libraries": {}
    },
    "sources": {
      "lib/account-abstraction/contracts/core/Helpers.sol": {
        "keccak256": "0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a",
        "urls": [
          "bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746",
          "dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAccount.sol": {
        "keccak256": "0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418",
        "urls": [
          "bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4",
          "dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a",
        "urls": [
          "bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b",
          "dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8",
        "urls": [
          "bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf",
          "dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/INonceManager.sol": {
        "keccak256": "0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12",
        "urls": [
          "bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2",
          "dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f",
        "urls": [
          "bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3",
          "dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c",
        "urls": [
          "bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c",
          "dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1155Receiver.sol": {
        "keccak256": "0xdffd96e40500212217d1267d1fa5eb294fe72ce5419638d6801996e0485580b9",
        "urls": [
          "bzz-raw://45d13d37bb0993b369d940fc724219d2dfcb6f265db8f8c337ee5f9c351317e7",
          "dweb:/ipfs/QmVkxaGAjR55DkFASE82h1DqCk4Tvhdh9diMS6m7aVWuYH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90",
        "urls": [
          "bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263",
          "dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC721Receiver.sol": {
        "keccak256": "0x7bd5dc796c245d4c52836610455d172cdfcc1f8dcf0d9b1c4cbde212fde02965",
        "urls": [
          "bzz-raw://a2305d1c655365cb05fa89cfbf2725cb68f3c6adf5d73da0176cc01bedebe961",
          "dweb:/ipfs/QmS3tu5EST14obbRvPRTm4h8Etfjn3vSfsW3CnbNd4ho8W"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2",
        "urls": [
          "bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2",
          "dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf",
        "urls": [
          "bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1",
          "dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/account/base/EntryManager.sol": {
        "keccak256": "0x5186b4a33b1ccca247d192cc549524d30119c396525748edfd5aa15361bf8b0a",
        "urls": [
          "bzz-raw://624292f1fb93e6db3f3ba338cc05f019fd4f1d529dc8ccad6d91c24f30616cb7",
          "dweb:/ipfs/QmXG9gMvKXPR3Pr2KsqwXKv3NBU21XBbLyNncbTeaHKp5W"
        ],
        "license": "MIT"
      },
      "src/account/base/FallbackManager.sol": {
        "keccak256": "0xb6eb01653aad2235f46eacd96dc78ed6afd8c75650e000646cbd3de6e0eb36fe",
        "urls": [
          "bzz-raw://fffa2ed77d7faff70484d22e3f2d0300130763b7eac76ce94402230833b434a4",
          "dweb:/ipfs/QmWVJLeuP5yApHijvGLZL8SVzin6T9NgSLoWZNQqQRB2UG"
        ],
        "license": "MIT"
      },
      "src/account/base/SelfAuth.sol": {
        "keccak256": "0x8ee61c9841af3b350763c1bdd424b4520a408d1eb2820fdc65e093cab245de61",
        "urls": [
          "bzz-raw://fd24eacca8e07d9764d1b5c8c539d8aa47605393f85612412f0bc43f7048df32",
          "dweb:/ipfs/QmXwqnDoYZQ9tAfNWvUeKqPABtUSS9yQHHbkvJoN9AEvUa"
        ],
        "license": "MIT"
      },
      "src/account/base/ValidatorManager.sol": {
        "keccak256": "0x23d08b8652890befeed30ffe832b5a9dde63052794b4c2946a72a08945bb8745",
        "urls": [
          "bzz-raw://d350ec09621733fd7dbe88782c4e0d35295448ef35940c34e1ce6825cf3fea08",
          "dweb:/ipfs/QmSEraW4wn1ZcbyMsMMoErAAMRvTfHt2xbcGndeb2aU9QM"
        ],
        "license": "MIT"
      },
      "src/account/base/ValidatorSpace.sol": {
        "keccak256": "0x6dbfb7c262a080397dc91c50fdfeee746516a69e5cefa173b1916c7d783d23cd",
        "urls": [
          "bzz-raw://d699050ccbb2b5e44c198b41977c33e44287e45081661261f9953d3ac9de4994",
          "dweb:/ipfs/QmPXc1b8Wrv2bfCwLXb3WxBxKqek3ojAGSZGJevvr98iaL"
        ],
        "license": null
      },
      "src/account/imAccount.sol": {
        "keccak256": "0xbdfa582547ce29c8f3113c9d6b7c50692aad600ed2017eadcb2a1d4b9326b1b1",
        "urls": [
          "bzz-raw://d1ccb9240b2c61686829d859a660c60dd99d5ba7ecdd0647fb3a01eecb99a67d",
          "dweb:/ipfs/QmbFNShfduay68sKAqWk7ruNVmxWbhrnTGjRYvRUd34nLM"
        ],
        "license": "MIT"
      },
      "src/account/interfaces/IEntryManager.sol": {
        "keccak256": "0xb97b1d45e447da42c83c2767272b12f04d63526ecbecd917ed98b69198565cab",
        "urls": [
          "bzz-raw://f37da231b0009387f00b35a2767cf8ce4c2ecf16c842e51fd7817bdc4acf3f06",
          "dweb:/ipfs/QmP812iz8UWzjiWz3SUUmB9y4taYXJSwBz4qLRGDDJAPiN"
        ],
        "license": "MIT"
      },
      "src/account/interfaces/IFallbackHandler.sol": {
        "keccak256": "0x6a35ebdc98db09f86ae7aa1be034558a8c5af818f4039e476c4142bd08b76d3b",
        "urls": [
          "bzz-raw://3f0b96b6db2f039ac439d82c468622206c08a5b410e807c419f6d94729a4b728",
          "dweb:/ipfs/Qmddyj5kfNRi5TpgXmfVbBacfEnYG9CpQckrdoT7WS2KRB"
        ],
        "license": "MIT"
      },
      "src/account/interfaces/IFallbackManager.sol": {
        "keccak256": "0x89eae22cc8b3b9c431efbcf9cca504a7a422789628fceeb30b408fbae3a0949f",
        "urls": [
          "bzz-raw://46f3f7970791c7b9c516e30267a699afa4c6d37861f9c07c7c65daf2be1cb8fc",
          "dweb:/ipfs/QmRBxTtDeq7mPthxyz6MBAigGyc7Xb71YHJiV1cbt4x2nK"
        ],
        "license": "MIT"
      },
      "src/account/interfaces/IValidator.sol": {
        "keccak256": "0xfdd1468300c945e01a6e66bb3fc81d72d89ee61273cc92149f3a4a84faf54571",
        "urls": [
          "bzz-raw://59380d55e7ab04ddf3b327043d4c2c2ff7a957dbb9cb4b7c0acd7d45519a9570",
          "dweb:/ipfs/QmRpjTTKh8cpjHEr86jxEL1dRVFdzGp1FDdeZP4DtSenhz"
        ],
        "license": "MIT"
      },
      "src/account/interfaces/IValidatorManager.sol": {
        "keccak256": "0xcdb4ca29dd111a1f655cdd47ce25a9b08a8a517af4484f654b95407a0e1b648f",
        "urls": [
          "bzz-raw://578b07ab014b7d778c3c0de5cc26362494cfd1edbd2d6f19e279b15bc13e914c",
          "dweb:/ipfs/Qmb3S9ZpQLTZ1JDFfwqLdXaSdEaPibwDTdCP4WWxN4Qg5H"
        ],
        "license": "MIT"
      },
      "src/account/interfaces/IValidatorSpace.sol": {
        "keccak256": "0x28689530ad6f575ccf0c65ffa45b4a7b68eee3a698775e0a33658e0dc6062267",
        "urls": [
          "bzz-raw://de5283fed087cfdfcc8737792bdd74ef9006f2010a606ff6e036a43aea58e904",
          "dweb:/ipfs/QmTbk1bP6crzhuoe1NApjCMrhxteqMuc1p8S2SzpuWYhBh"
        ],
        "license": "MIT"
      },
      "src/account/interfaces/IimAccount.sol": {
        "keccak256": "0x983eb8f5ecca0fc07567da790268b6462d2a46af33d327c44ad1fe65597084e1",
        "urls": [
          "bzz-raw://9096c260ce080ebdced435b8f8a7705e1ff944bc417b33c919267f7423b70aac",
          "dweb:/ipfs/QmfQJXFWTNhRSUNPVW3GYhAEs1uhZDuJTAHZw3QPTVmLL2"
        ],
        "license": "MIT"
      },
      "src/account/libraries/Constant.sol": {
        "keccak256": "0xff9259b11129757d2f7e29c0a37ae945e262b970ca9499661915f97f4a4bba2f",
        "urls": [
          "bzz-raw://a9f8cd4179a76ed6b98a4e1170364bf52279eb6bad65fe287be455cc49be7c33",
          "dweb:/ipfs/QmewM6VH4FsdfNEGU6odti25PHyRgVojuBh1SpPbg1GuZe"
        ],
        "license": "MIT"
      },
      "src/account/libraries/Exec.sol": {
        "keccak256": "0x1e3b1bf878a41be9d20c951f71551c6e350460df608812d439e451cd1674719f",
        "urls": [
          "bzz-raw://50ed37352aa10bad47835d3965c7767924999e5fde00794cf36eac7ae37f8f4f",
          "dweb:/ipfs/QmQn6cRupTcpEi5SvJCuF1cFxDxK4Atm5X3zmdtiQGsch8"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/account/imAccount.sol",
    "id": 56130,
    "exportedSymbols": {
      "Call": [56567],
      "ERC1271_FAIL_MAGIC": [56551],
      "ERC1271_SUCCESS_MAGIC": [56548],
      "EntryManager": [54400],
      "FallbackManager": [54546],
      "IEntryPoint": [3498],
      "IFallbackHandler": [56172],
      "IValidator": [56233],
      "IimAccount": [56406],
      "Initializable": [49611],
      "OpTarget": [56208],
      "UUPSUpgradeable": [49727],
      "UserOperation": [3684],
      "ValidatorManager": [54890],
      "executeCall": [56602],
      "imAccount": [56129]
    },
    "nodeType": "SourceUnit",
    "src": "32:5551:78",
    "nodes": [
      {
        "id": 55694,
        "nodeType": "PragmaDirective",
        "src": "32:24:78",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".17"]
      },
      {
        "id": 55696,
        "nodeType": "ImportDirective",
        "src": "117:61:78",
        "nodes": [],
        "absolutePath": "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol",
        "file": "@aa/interfaces/IEntryPoint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56130,
        "sourceUnit": 3499,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55695,
              "name": "IEntryPoint",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3498,
              "src": "126:11:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55698,
        "nodeType": "ImportDirective",
        "src": "179:65:78",
        "nodes": [],
        "absolutePath": "lib/account-abstraction/contracts/interfaces/UserOperation.sol",
        "file": "@aa/interfaces/UserOperation.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56130,
        "sourceUnit": 3855,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55697,
              "name": "UserOperation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3684,
              "src": "188:13:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55700,
        "nodeType": "ImportDirective",
        "src": "245:66:78",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "file": "@oz/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56130,
        "sourceUnit": 49612,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55699,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49611,
              "src": "254:13:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55702,
        "nodeType": "ImportDirective",
        "src": "312:70:78",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "@oz/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56130,
        "sourceUnit": 49728,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55701,
              "name": "UUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49727,
              "src": "321:15:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55704,
        "nodeType": "ImportDirective",
        "src": "383:57:78",
        "nodes": [],
        "absolutePath": "src/account/interfaces/IimAccount.sol",
        "file": "./interfaces/IimAccount.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56130,
        "sourceUnit": 56407,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55703,
              "name": "IimAccount",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56406,
              "src": "392:10:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55707,
        "nodeType": "ImportDirective",
        "src": "441:67:78",
        "nodes": [],
        "absolutePath": "src/account/interfaces/IValidator.sol",
        "file": "./interfaces/IValidator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56130,
        "sourceUnit": 56234,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55705,
              "name": "IValidator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56233,
              "src": "450:10:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 55706,
              "name": "OpTarget",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56208,
              "src": "462:8:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55709,
        "nodeType": "ImportDirective",
        "src": "509:69:78",
        "nodes": [],
        "absolutePath": "src/account/interfaces/IFallbackHandler.sol",
        "file": "./interfaces/IFallbackHandler.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56130,
        "sourceUnit": 56173,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55708,
              "name": "IFallbackHandler",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56172,
              "src": "518:16:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55711,
        "nodeType": "ImportDirective",
        "src": "579:55:78",
        "nodes": [],
        "absolutePath": "src/account/base/EntryManager.sol",
        "file": "./base/EntryManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56130,
        "sourceUnit": 54401,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55710,
              "name": "EntryManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54400,
              "src": "588:12:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55713,
        "nodeType": "ImportDirective",
        "src": "635:63:78",
        "nodes": [],
        "absolutePath": "src/account/base/ValidatorManager.sol",
        "file": "./base/ValidatorManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56130,
        "sourceUnit": 54891,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55712,
              "name": "ValidatorManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54890,
              "src": "644:16:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55715,
        "nodeType": "ImportDirective",
        "src": "699:61:78",
        "nodes": [],
        "absolutePath": "src/account/base/FallbackManager.sol",
        "file": "./base/FallbackManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56130,
        "sourceUnit": 54547,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55714,
              "name": "FallbackManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54546,
              "src": "708:15:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55718,
        "nodeType": "ImportDirective",
        "src": "761:57:78",
        "nodes": [],
        "absolutePath": "src/account/libraries/Exec.sol",
        "file": "./libraries/Exec.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56130,
        "sourceUnit": 56603,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55716,
              "name": "Call",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56567,
              "src": "770:4:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 55717,
              "name": "executeCall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56602,
              "src": "776:11:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 55721,
        "nodeType": "ImportDirective",
        "src": "819:85:78",
        "nodes": [],
        "absolutePath": "src/account/libraries/Constant.sol",
        "file": "./libraries/Constant.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56130,
        "sourceUnit": 56559,
        "symbolAliases": [
          {
            "foreign": {
              "id": 55719,
              "name": "ERC1271_SUCCESS_MAGIC",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56548,
              "src": "828:21:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 55720,
              "name": "ERC1271_FAIL_MAGIC",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56551,
              "src": "851:18:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 56129,
        "nodeType": "ContractDefinition",
        "src": "906:4676:78",
        "nodes": [
          {
            "id": 55740,
            "nodeType": "FunctionDefinition",
            "src": "1050:53:78",
            "nodes": [],
            "body": {
              "id": 55739,
              "nodeType": "Block",
              "src": "1064:39:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 55736,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49592,
                      "src": "1074:20:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 55737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1074:22:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55738,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:22:78"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 55734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1061:2:78"
            },
            "returnParameters": {
              "id": 55735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1064:0:78"
            },
            "scope": 56129,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 55744,
            "nodeType": "FunctionDefinition",
            "src": "1109:29:78",
            "nodes": [],
            "body": {
              "id": 55743,
              "nodeType": "Block",
              "src": "1136:2:78",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 55741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1116:2:78"
            },
            "returnParameters": {
              "id": 55742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1136:0:78"
            },
            "scope": 56129,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55774,
            "nodeType": "FunctionDefinition",
            "src": "1144:360:78",
            "nodes": [],
            "body": {
              "id": 55773,
              "nodeType": "Block",
              "src": "1347:157:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55761,
                        "name": "entryPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55747,
                        "src": "1372:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntryPoint_$3498",
                          "typeString": "contract IEntryPoint"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IEntryPoint_$3498",
                          "typeString": "contract IEntryPoint"
                        }
                      ],
                      "id": 55760,
                      "name": "_setEntryPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54387,
                      "src": "1357:14:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IEntryPoint_$3498_$returns$__$",
                        "typeString": "function (contract IEntryPoint)"
                      }
                    },
                    "id": 55762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:26:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55763,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:26:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55765,
                        "name": "fallbackHandler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55750,
                        "src": "1413:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFallbackHandler_$56172",
                          "typeString": "contract IFallbackHandler"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFallbackHandler_$56172",
                          "typeString": "contract IFallbackHandler"
                        }
                      ],
                      "id": 55764,
                      "name": "_setFallbackHandler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54533,
                      "src": "1393:19:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IFallbackHandler_$56172_$returns$__$",
                        "typeString": "function (contract IFallbackHandler)"
                      }
                    },
                    "id": 55766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1393:36:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55767,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:36:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55769,
                        "name": "ownerValidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55753,
                        "src": "1458:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IValidator_$56233",
                          "typeString": "contract IValidator"
                        }
                      },
                      {
                        "id": 55770,
                        "name": "ownerValidatorInitData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55755,
                        "src": "1474:22:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IValidator_$56233",
                          "typeString": "contract IValidator"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 55768,
                      "name": "_setOwnerValidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54768,
                      "src": "1439:18:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IValidator_$56233_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (contract IValidator,bytes calldata)"
                      }
                    },
                    "id": 55771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1439:58:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55772,
                  "nodeType": "ExpressionStatement",
                  "src": "1439:58:78"
                }
              ]
            },
            "functionSelector": "246581f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 55758,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 55757,
                  "name": "initializer",
                  "nameLocations": ["1335:11:78"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49513,
                  "src": "1335:11:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "1335:11:78"
              }
            ],
            "name": "initialize",
            "nameLocation": "1153:10:78",
            "parameters": {
              "id": 55756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55747,
                  "mutability": "mutable",
                  "name": "entryPoint",
                  "nameLocation": "1185:10:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 55774,
                  "src": "1173:22:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$3498",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 55746,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55745,
                      "name": "IEntryPoint",
                      "nameLocations": ["1173:11:78"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3498,
                      "src": "1173:11:78"
                    },
                    "referencedDeclaration": 3498,
                    "src": "1173:11:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$3498",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55750,
                  "mutability": "mutable",
                  "name": "fallbackHandler",
                  "nameLocation": "1222:15:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 55774,
                  "src": "1205:32:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFallbackHandler_$56172",
                    "typeString": "contract IFallbackHandler"
                  },
                  "typeName": {
                    "id": 55749,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55748,
                      "name": "IFallbackHandler",
                      "nameLocations": ["1205:16:78"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56172,
                      "src": "1205:16:78"
                    },
                    "referencedDeclaration": 56172,
                    "src": "1205:16:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFallbackHandler_$56172",
                      "typeString": "contract IFallbackHandler"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55753,
                  "mutability": "mutable",
                  "name": "ownerValidator",
                  "nameLocation": "1258:14:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 55774,
                  "src": "1247:25:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IValidator_$56233",
                    "typeString": "contract IValidator"
                  },
                  "typeName": {
                    "id": 55752,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55751,
                      "name": "IValidator",
                      "nameLocations": ["1247:10:78"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56233,
                      "src": "1247:10:78"
                    },
                    "referencedDeclaration": 56233,
                    "src": "1247:10:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IValidator_$56233",
                      "typeString": "contract IValidator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55755,
                  "mutability": "mutable",
                  "name": "ownerValidatorInitData",
                  "nameLocation": "1297:22:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 55774,
                  "src": "1282:37:78",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 55754,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1282:5:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1163:162:78"
            },
            "returnParameters": {
              "id": 55759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1347:0:78"
            },
            "scope": 56129,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55830,
            "nodeType": "FunctionDefinition",
            "src": "1510:719:78",
            "nodes": [],
            "body": {
              "id": 55829,
              "nodeType": "Block",
              "src": "1701:528:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [55790, 55793],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55790,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "1723:9:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 55829,
                      "src": "1712:20:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IValidator_$56233",
                        "typeString": "contract IValidator"
                      },
                      "typeName": {
                        "id": 55789,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 55788,
                          "name": "IValidator",
                          "nameLocations": ["1712:10:78"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 56233,
                          "src": "1712:10:78"
                        },
                        "referencedDeclaration": 56233,
                        "src": "1712:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IValidator_$56233",
                          "typeString": "contract IValidator"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 55793,
                      "mutability": "mutable",
                      "name": "opTarget",
                      "nameLocation": "1743:8:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 55829,
                      "src": "1734:17:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OpTarget_$56208",
                        "typeString": "enum OpTarget"
                      },
                      "typeName": {
                        "id": 55792,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 55791,
                          "name": "OpTarget",
                          "nameLocations": ["1734:8:78"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 56208,
                          "src": "1734:8:78"
                        },
                        "referencedDeclaration": 56208,
                        "src": "1734:8:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OpTarget_$56208",
                          "typeString": "enum OpTarget"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55797,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55795,
                        "name": "userOp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55777,
                        "src": "1773:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOperation_$3684_calldata_ptr",
                          "typeString": "struct UserOperation calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_UserOperation_$3684_calldata_ptr",
                          "typeString": "struct UserOperation calldata"
                        }
                      ],
                      "id": 55794,
                      "name": "getValidationInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56047,
                      "src": "1755:17:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UserOperation_$3684_calldata_ptr_$returns$_t_contract$_IValidator_$56233_$_t_enum$_OpTarget_$56208_$",
                        "typeString": "function (struct UserOperation calldata) view returns (contract IValidator,enum OpTarget)"
                      }
                    },
                    "id": 55796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1755:25:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IValidator_$56233_$_t_enum$_OpTarget_$56208_$",
                      "typeString": "tuple(contract IValidator,enum OpTarget)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1711:69:78"
                },
                {
                  "expression": {
                    "id": 55805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55798,
                      "name": "validationData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55786,
                      "src": "1790:14:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 55801,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55777,
                          "src": "1832:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$3684_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        {
                          "id": 55802,
                          "name": "userOpHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55779,
                          "src": "1840:10:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 55803,
                          "name": "opTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55793,
                          "src": "1852:8:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OpTarget_$56208",
                            "typeString": "enum OpTarget"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_UserOperation_$3684_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_enum$_OpTarget_$56208",
                            "typeString": "enum OpTarget"
                          }
                        ],
                        "expression": {
                          "id": 55799,
                          "name": "validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55790,
                          "src": "1807:9:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IValidator_$56233",
                            "typeString": "contract IValidator"
                          }
                        },
                        "id": 55800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1817:14:78",
                        "memberName": "validateUserOp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56222,
                        "src": "1807:24:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_struct$_UserOperation_$3684_memory_ptr_$_t_bytes32_$_t_enum$_OpTarget_$56208_$returns$_t_uint256_$",
                          "typeString": "function (struct UserOperation memory,bytes32,enum OpTarget) view external returns (uint256)"
                        }
                      },
                      "id": 55804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1807:54:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1790:71:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 55806,
                  "nodeType": "ExpressionStatement",
                  "src": "1790:71:78"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 55809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 55807,
                      "name": "missingAccountFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55781,
                      "src": "1959:19:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 55808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1982:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1959:24:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 55827,
                    "nodeType": "Block",
                    "src": "1993:230:78",
                    "statements": [
                      {
                        "assignments": [55812, null],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 55812,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2013:7:78",
                            "nodeType": "VariableDeclaration",
                            "scope": 55827,
                            "src": "2008:12:78",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 55811,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2008:4:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 55823,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 55821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2109:2:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 55815,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2034:3:78",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 55816,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2038:6:78",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2034:10:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 55814,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2026:8:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 55813,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2026:8:78",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 55817,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2026:19:78",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 55818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2046:4:78",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2026:24:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 55820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": ["value"],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 55819,
                                "name": "missingAccountFunds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55781,
                                "src": "2075:19:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2026:82:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 55822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2026:86:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2007:105:78"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 55824,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55812,
                              "src": "2204:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 55825,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2203:9:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 55826,
                        "nodeType": "ExpressionStatement",
                        "src": "2203:9:78"
                      }
                    ]
                  },
                  "id": 55828,
                  "nodeType": "IfStatement",
                  "src": "1955:268:78",
                  "trueBody": {
                    "id": 55810,
                    "nodeType": "Block",
                    "src": "1985:2:78",
                    "statements": []
                  }
                }
              ]
            },
            "baseFunctions": [3259],
            "functionSelector": "3a871cdd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 55784,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 55783,
                  "name": "onlyEntryPoint",
                  "nameLocations": ["1653:14:78"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54323,
                  "src": "1653:14:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "1653:14:78"
              }
            ],
            "name": "validateUserOp",
            "nameLocation": "1519:14:78",
            "parameters": {
              "id": 55782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55777,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "1566:6:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 55830,
                  "src": "1543:29:78",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$3684_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 55776,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55775,
                      "name": "UserOperation",
                      "nameLocations": ["1543:13:78"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3684,
                      "src": "1543:13:78"
                    },
                    "referencedDeclaration": 3684,
                    "src": "1543:13:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3684_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55779,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "1590:10:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 55830,
                  "src": "1582:18:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 55778,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55781,
                  "mutability": "mutable",
                  "name": "missingAccountFunds",
                  "nameLocation": "1618:19:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 55830,
                  "src": "1610:27:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1610:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1533:110:78"
            },
            "returnParameters": {
              "id": 55787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55786,
                  "mutability": "mutable",
                  "name": "validationData",
                  "nameLocation": "1685:14:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 55830,
                  "src": "1677:22:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1677:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1676:24:78"
            },
            "scope": 56129,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55859,
            "nodeType": "FunctionDefinition",
            "src": "2235:224:78",
            "nodes": [],
            "body": {
              "id": 55858,
              "nodeType": "Block",
              "src": "2299:160:78",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 55856,
                    "nodeType": "Block",
                    "src": "2352:101:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 55851,
                                "name": "calls",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55834,
                                "src": "2433:5:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Call_$56567_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct Call calldata[] calldata"
                                }
                              },
                              "id": 55853,
                              "indexExpression": {
                                "id": 55852,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55840,
                                "src": "2439:1:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2433:8:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Call_$56567_calldata_ptr",
                                "typeString": "struct Call calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Call_$56567_calldata_ptr",
                                "typeString": "struct Call calldata"
                              }
                            ],
                            "id": 55850,
                            "name": "executeCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56602,
                            "src": "2421:11:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Call_$56567_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (struct Call memory) returns (bytes memory)"
                            }
                          },
                          "id": 55854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2421:21:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 55855,
                        "nodeType": "ExpressionStatement",
                        "src": "2421:21:78"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 55846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 55843,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55840,
                      "src": "2329:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 55844,
                        "name": "calls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55834,
                        "src": "2333:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Call_$56567_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Call calldata[] calldata"
                        }
                      },
                      "id": 55845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2339:6:78",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2333:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2329:16:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55857,
                  "initializationExpression": {
                    "assignments": [55840],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 55840,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2322:1:78",
                        "nodeType": "VariableDeclaration",
                        "scope": 55857,
                        "src": "2314:9:78",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 55839,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2314:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 55842,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 55841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2326:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2314:13:78"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 55848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2347:3:78",
                      "subExpression": {
                        "id": 55847,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55840,
                        "src": "2349:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 55849,
                    "nodeType": "ExpressionStatement",
                    "src": "2347:3:78"
                  },
                  "nodeType": "ForStatement",
                  "src": "2309:144:78"
                }
              ]
            },
            "baseFunctions": [56392],
            "functionSelector": "3f707e6b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 55837,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 55836,
                  "name": "onlyEntryPoint",
                  "nameLocations": ["2284:14:78"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54323,
                  "src": "2284:14:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "2284:14:78"
              }
            ],
            "name": "execute",
            "nameLocation": "2244:7:78",
            "parameters": {
              "id": 55835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55834,
                  "mutability": "mutable",
                  "name": "calls",
                  "nameLocation": "2268:5:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 55859,
                  "src": "2252:21:78",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Call_$56567_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Call[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 55832,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 55831,
                        "name": "Call",
                        "nameLocations": ["2252:4:78"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 56567,
                        "src": "2252:4:78"
                      },
                      "referencedDeclaration": 56567,
                      "src": "2252:4:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Call_$56567_storage_ptr",
                        "typeString": "struct Call"
                      }
                    },
                    "id": 55833,
                    "nodeType": "ArrayTypeName",
                    "src": "2252:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Call_$56567_storage_$dyn_storage_ptr",
                      "typeString": "struct Call[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2251:23:78"
            },
            "returnParameters": {
              "id": 55838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2299:0:78"
            },
            "scope": 56129,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56047,
            "nodeType": "FunctionDefinition",
            "src": "2465:2255:78",
            "nodes": [],
            "body": {
              "id": 56046,
              "nodeType": "Block",
              "src": "2580:2140:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [55872],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55872,
                      "mutability": "mutable",
                      "name": "selector",
                      "nameLocation": "2597:8:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 56046,
                      "src": "2590:15:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 55871,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "2590:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55880,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 55875,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55862,
                            "src": "2615:6:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$3684_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          "id": 55876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2622:8:78",
                          "memberName": "callData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3669,
                          "src": "2615:15:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "endExpression": {
                          "hexValue": "34",
                          "id": 55877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2632:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "id": 55878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexRangeAccess",
                        "src": "2615:19:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        }
                      ],
                      "id": 55874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2608:6:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": {
                        "id": 55873,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "2608:6:78",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 55879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2608:27:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2590:45:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 55886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 55882,
                          "name": "selector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55872,
                          "src": "2666:8:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 55883,
                              "name": "imAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56129,
                              "src": "2678:9:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_imAccount_$56129_$",
                                "typeString": "type(contract imAccount)"
                              }
                            },
                            "id": 55884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2688:7:78",
                            "memberName": "execute",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55859,
                            "src": "2678:17:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_struct$_Call_$56567_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                              "typeString": "function imAccount.execute(struct Call calldata[] calldata)"
                            }
                          },
                          "id": 55885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2696:8:78",
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "2678:26:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "2666:38:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c69646174696f6e204661696c65643a20696e76616c69642063616c6c64617461",
                        "id": 55887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2718:37:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bf58c09114bd1a1aa7b987d8ff4017299feea3e325ef63282ede4e1315e9e5c",
                          "typeString": "literal_string \"Validation Failed: invalid calldata\""
                        },
                        "value": "Validation Failed: invalid calldata"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bf58c09114bd1a1aa7b987d8ff4017299feea3e325ef63282ede4e1315e9e5c",
                          "typeString": "literal_string \"Validation Failed: invalid calldata\""
                        }
                      ],
                      "id": 55881,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2645:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 55888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2645:120:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55889,
                  "nodeType": "ExpressionStatement",
                  "src": "2645:120:78"
                },
                {
                  "assignments": [55894],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55894,
                      "mutability": "mutable",
                      "name": "calls",
                      "nameLocation": "2790:5:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 56046,
                      "src": "2776:19:78",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Call_$56567_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Call[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 55892,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 55891,
                            "name": "Call",
                            "nameLocations": ["2776:4:78"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 56567,
                            "src": "2776:4:78"
                          },
                          "referencedDeclaration": 56567,
                          "src": "2776:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Call_$56567_storage_ptr",
                            "typeString": "struct Call"
                          }
                        },
                        "id": 55893,
                        "nodeType": "ArrayTypeName",
                        "src": "2776:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Call_$56567_storage_$dyn_storage_ptr",
                          "typeString": "struct Call[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55905,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 55897,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55862,
                            "src": "2809:6:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$3684_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          "id": 55898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2816:8:78",
                          "memberName": "callData",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3669,
                          "src": "2809:15:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "id": 55900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexRangeAccess",
                        "src": "2809:19:78",
                        "startExpression": {
                          "hexValue": "34",
                          "id": 55899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2825:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 55901,
                              "name": "Call",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56567,
                              "src": "2831:4:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Call_$56567_storage_ptr_$",
                                "typeString": "type(struct Call storage pointer)"
                              }
                            },
                            "id": 55902,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2831:6:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_Call_$56567_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct Call memory[] memory)"
                            }
                          }
                        ],
                        "id": 55903,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2830:8:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_Call_$56567_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct Call memory[] memory)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        },
                        {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_Call_$56567_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct Call memory[] memory)"
                        }
                      ],
                      "expression": {
                        "id": 55895,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2798:3:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 55896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2802:6:78",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2798:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 55904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2798:41:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Call_$56567_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Call memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2776:63:78"
                },
                {
                  "assignments": [55907],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55907,
                      "mutability": "mutable",
                      "name": "callCount",
                      "nameLocation": "2857:9:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 56046,
                      "src": "2849:17:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55906,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2849:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55910,
                  "initialValue": {
                    "expression": {
                      "id": 55908,
                      "name": "calls",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55894,
                      "src": "2869:5:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Call_$56567_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Call memory[] memory"
                      }
                    },
                    "id": 55909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2875:6:78",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2869:12:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2849:32:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 55914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 55912,
                          "name": "callCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55907,
                          "src": "2899:9:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 55913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2911:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2899:13:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c69646174696f6e204661696c65643a20696e76616c69642063616c6c64617461",
                        "id": 55915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2914:37:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bf58c09114bd1a1aa7b987d8ff4017299feea3e325ef63282ede4e1315e9e5c",
                          "typeString": "literal_string \"Validation Failed: invalid calldata\""
                        },
                        "value": "Validation Failed: invalid calldata"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bf58c09114bd1a1aa7b987d8ff4017299feea3e325ef63282ede4e1315e9e5c",
                          "typeString": "literal_string \"Validation Failed: invalid calldata\""
                        }
                      ],
                      "id": 55911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2891:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 55916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2891:61:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55917,
                  "nodeType": "ExpressionStatement",
                  "src": "2891:61:78"
                },
                {
                  "assignments": [55919],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55919,
                      "mutability": "mutable",
                      "name": "opTargetAddr",
                      "nameLocation": "2971:12:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 56046,
                      "src": "2963:20:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 55918,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2963:7:78",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55924,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 55920,
                        "name": "calls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55894,
                        "src": "2986:5:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Call_$56567_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Call memory[] memory"
                        }
                      },
                      "id": 55922,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 55921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2992:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2986:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Call_$56567_memory_ptr",
                        "typeString": "struct Call memory"
                      }
                    },
                    "id": 55923,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2995:2:78",
                    "memberName": "to",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 56562,
                    "src": "2986:11:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2963:34:78"
                },
                {
                  "assignments": [55927],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55927,
                      "mutability": "mutable",
                      "name": "opTarget",
                      "nameLocation": "3016:8:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 56046,
                      "src": "3007:17:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OpTarget_$56208",
                        "typeString": "enum OpTarget"
                      },
                      "typeName": {
                        "id": 55926,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 55925,
                          "name": "OpTarget",
                          "nameLocations": ["3007:8:78"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 56208,
                          "src": "3007:8:78"
                        },
                        "referencedDeclaration": 56208,
                        "src": "3007:8:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OpTarget_$56208",
                          "typeString": "enum OpTarget"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55931,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 55929,
                        "name": "opTargetAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55919,
                        "src": "3040:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 55928,
                      "name": "_getOpTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56128,
                      "src": "3027:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_OpTarget_$56208_$",
                        "typeString": "function (address) view returns (enum OpTarget)"
                      }
                    },
                    "id": 55930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3027:26:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OpTarget_$56208",
                      "typeString": "enum OpTarget"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3007:46:78"
                },
                {
                  "body": {
                    "id": 55970,
                    "nodeType": "Block",
                    "src": "3193:482:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_OpTarget_$56208",
                                "typeString": "enum OpTarget"
                              },
                              "id": 55950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 55943,
                                "name": "opTarget",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55927,
                                "src": "3232:8:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_OpTarget_$56208",
                                  "typeString": "enum OpTarget"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 55945,
                                        "name": "calls",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 55894,
                                        "src": "3257:5:78",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Call_$56567_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct Call memory[] memory"
                                        }
                                      },
                                      "id": 55947,
                                      "indexExpression": {
                                        "id": 55946,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 55933,
                                        "src": "3263:1:78",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3257:8:78",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Call_$56567_memory_ptr",
                                        "typeString": "struct Call memory"
                                      }
                                    },
                                    "id": 55948,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3266:2:78",
                                    "memberName": "to",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 56562,
                                    "src": "3257:11:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 55944,
                                  "name": "_getOpTarget",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56128,
                                  "src": "3244:12:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_OpTarget_$56208_$",
                                    "typeString": "function (address) view returns (enum OpTarget)"
                                  }
                                },
                                "id": 55949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3244:25:78",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_OpTarget_$56208",
                                  "typeString": "enum OpTarget"
                                }
                              },
                              "src": "3232:37:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56616c69646174696f6e204661696c65643a2063616c6c7320636f6e7461696e20646966666572656e74204f7054617267657473",
                              "id": 55951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3287:54:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c0299fae8ba4a833a86dd8edc0ad3c46185a76817b15ed03f5b1cf994801dc47",
                                "typeString": "literal_string \"Validation Failed: calls contain different OpTargets\""
                              },
                              "value": "Validation Failed: calls contain different OpTargets"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c0299fae8ba4a833a86dd8edc0ad3c46185a76817b15ed03f5b1cf994801dc47",
                                "typeString": "literal_string \"Validation Failed: calls contain different OpTargets\""
                              }
                            ],
                            "id": 55942,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "3207:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 55952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3207:148:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55953,
                        "nodeType": "ExpressionStatement",
                        "src": "3207:148:78"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_OpTarget_$56208",
                            "typeString": "enum OpTarget"
                          },
                          "id": 55957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 55954,
                            "name": "opTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55927,
                            "src": "3451:8:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OpTarget_$56208",
                              "typeString": "enum OpTarget"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 55955,
                              "name": "OpTarget",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56208,
                              "src": "3463:8:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_OpTarget_$56208_$",
                                "typeString": "type(enum OpTarget)"
                              }
                            },
                            "id": 55956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3472:8:78",
                            "memberName": "External",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 56207,
                            "src": "3463:17:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_OpTarget_$56208",
                              "typeString": "enum OpTarget"
                            }
                          },
                          "src": "3451:29:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 55969,
                        "nodeType": "IfStatement",
                        "src": "3447:218:78",
                        "trueBody": {
                          "id": 55968,
                          "nodeType": "Block",
                          "src": "3482:183:78",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 55964,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 55959,
                                      "name": "opTargetAddr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 55919,
                                      "src": "3529:12:78",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 55960,
                                          "name": "calls",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 55894,
                                          "src": "3545:5:78",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Call_$56567_memory_ptr_$dyn_memory_ptr",
                                            "typeString": "struct Call memory[] memory"
                                          }
                                        },
                                        "id": 55962,
                                        "indexExpression": {
                                          "id": 55961,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 55933,
                                          "src": "3551:1:78",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3545:8:78",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Call_$56567_memory_ptr",
                                          "typeString": "struct Call memory"
                                        }
                                      },
                                      "id": 55963,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3554:2:78",
                                      "memberName": "to",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 56562,
                                      "src": "3545:11:78",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "3529:27:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "56616c69646174696f6e204661696c65643a2063616c6c7320646f206e6f742068617665207468652073616d652063616c6c6565",
                                    "id": 55965,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3578:54:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_46977074f92bd7160cb0d7be310bbb7a0d6925b95c848e52df180c08c27fae77",
                                      "typeString": "literal_string \"Validation Failed: calls do not have the same callee\""
                                    },
                                    "value": "Validation Failed: calls do not have the same callee"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_46977074f92bd7160cb0d7be310bbb7a0d6925b95c848e52df180c08c27fae77",
                                      "typeString": "literal_string \"Validation Failed: calls do not have the same callee\""
                                    }
                                  ],
                                  "id": 55958,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [-18, -18],
                                  "referencedDeclaration": -18,
                                  "src": "3500:7:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 55966,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3500:150:78",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 55967,
                              "nodeType": "ExpressionStatement",
                              "src": "3500:150:78"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 55938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 55936,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55933,
                      "src": "3173:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 55937,
                      "name": "callCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55907,
                      "src": "3177:9:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3173:13:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 55971,
                  "initializationExpression": {
                    "assignments": [55933],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 55933,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3166:1:78",
                        "nodeType": "VariableDeclaration",
                        "scope": 55971,
                        "src": "3158:9:78",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 55932,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3158:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 55935,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 55934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3170:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3158:13:78"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 55940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3188:3:78",
                      "subExpression": {
                        "id": 55939,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55933,
                        "src": "3190:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 55941,
                    "nodeType": "ExpressionStatement",
                    "src": "3188:3:78"
                  },
                  "nodeType": "ForStatement",
                  "src": "3153:522:78"
                },
                {
                  "assignments": [55973],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55973,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "3693:9:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 56046,
                      "src": "3685:17:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 55972,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3685:7:78",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 55982,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 55976,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55862,
                          "src": "3716:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$3684_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 55977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3723:9:78",
                        "memberName": "signature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3683,
                        "src": "3716:16:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 55979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3735:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 55978,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3735:7:78",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 55980,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3734:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 55974,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3705:3:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 55975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3709:6:78",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3705:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 55981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3705:39:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3685:59:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 55986,
                                "name": "validator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55973,
                                "src": "3805:9:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 55985,
                              "name": "IValidator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56233,
                              "src": "3794:10:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IValidator_$56233_$",
                                "typeString": "type(contract IValidator)"
                              }
                            },
                            "id": 55987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3794:21:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IValidator_$56233",
                              "typeString": "contract IValidator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IValidator_$56233",
                              "typeString": "contract IValidator"
                            }
                          ],
                          "id": 55984,
                          "name": "isCurrentValidator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54685,
                          "src": "3775:18:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IValidator_$56233_$returns$_t_bool_$",
                            "typeString": "function (contract IValidator) view returns (bool)"
                          }
                        },
                        "id": 55988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3775:41:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636573732044656e6965643a206e6f742063757272656e742076616c696461746f72",
                        "id": 55989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3830:38:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2040bff1a07fc484d5aafec1b6c56325920d7e254d05216e8e3ce611145f0d7",
                          "typeString": "literal_string \"Access Denied: not current validator\""
                        },
                        "value": "Access Denied: not current validator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2040bff1a07fc484d5aafec1b6c56325920d7e254d05216e8e3ce611145f0d7",
                          "typeString": "literal_string \"Access Denied: not current validator\""
                        }
                      ],
                      "id": 55983,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "3754:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 55990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3754:124:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55991,
                  "nodeType": "ExpressionStatement",
                  "src": "3754:124:78"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_OpTarget_$56208",
                      "typeString": "enum OpTarget"
                    },
                    "id": 55995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 55992,
                      "name": "opTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55927,
                      "src": "3961:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OpTarget_$56208",
                        "typeString": "enum OpTarget"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 55993,
                        "name": "OpTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56208,
                        "src": "3973:8:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_OpTarget_$56208_$",
                          "typeString": "type(enum OpTarget)"
                        }
                      },
                      "id": 55994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3982:7:78",
                      "memberName": "Account",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56205,
                      "src": "3973:16:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OpTarget_$56208",
                        "typeString": "enum OpTarget"
                      }
                    },
                    "src": "3961:28:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56018,
                  "nodeType": "IfStatement",
                  "src": "3957:306:78",
                  "trueBody": {
                    "id": 56017,
                    "nodeType": "Block",
                    "src": "3991:272:78",
                    "statements": [
                      {
                        "assignments": [55998],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 55998,
                            "mutability": "mutable",
                            "name": "ownerValidator",
                            "nameLocation": "4016:14:78",
                            "nodeType": "VariableDeclaration",
                            "scope": 56017,
                            "src": "4005:25:78",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IValidator_$56233",
                              "typeString": "contract IValidator"
                            },
                            "typeName": {
                              "id": 55997,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 55996,
                                "name": "IValidator",
                                "nameLocations": ["4005:10:78"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 56233,
                                "src": "4005:10:78"
                              },
                              "referencedDeclaration": 56233,
                              "src": "4005:10:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IValidator_$56233",
                                "typeString": "contract IValidator"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 56001,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 55999,
                            "name": "getOwnerValidator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54609,
                            "src": "4033:17:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IValidator_$56233_$",
                              "typeString": "function () view returns (contract IValidator)"
                            }
                          },
                          "id": 56000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4033:19:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IValidator_$56233",
                            "typeString": "contract IValidator"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4005:47:78"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 56008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 56003,
                                "name": "validator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55973,
                                "src": "4091:9:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 56006,
                                    "name": "ownerValidator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55998,
                                    "src": "4112:14:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IValidator_$56233",
                                      "typeString": "contract IValidator"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IValidator_$56233",
                                      "typeString": "contract IValidator"
                                    }
                                  ],
                                  "id": 56005,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4104:7:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 56004,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4104:7:78",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 56007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4104:23:78",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4091:36:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56616c69646174696f6e204661696c65643a20696e76616c69642076616c696461746f72",
                              "id": 56009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4145:38:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_18120eb0b5e22b7c2c363b7cf1d68b9fb4b3f434c0ad1a307238347e057f53d4",
                                "typeString": "literal_string \"Validation Failed: invalid validator\""
                              },
                              "value": "Validation Failed: invalid validator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_18120eb0b5e22b7c2c363b7cf1d68b9fb4b3f434c0ad1a307238347e057f53d4",
                                "typeString": "literal_string \"Validation Failed: invalid validator\""
                              }
                            ],
                            "id": 56002,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "4066:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 56010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4066:131:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 56011,
                        "nodeType": "ExpressionStatement",
                        "src": "4066:131:78"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 56012,
                              "name": "ownerValidator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55998,
                              "src": "4219:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IValidator_$56233",
                                "typeString": "contract IValidator"
                              }
                            },
                            {
                              "expression": {
                                "id": 56013,
                                "name": "OpTarget",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56208,
                                "src": "4235:8:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_OpTarget_$56208_$",
                                  "typeString": "type(enum OpTarget)"
                                }
                              },
                              "id": 56014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4244:7:78",
                              "memberName": "Account",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56205,
                              "src": "4235:16:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_OpTarget_$56208",
                                "typeString": "enum OpTarget"
                              }
                            }
                          ],
                          "id": 56015,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4218:34:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_contract$_IValidator_$56233_$_t_enum$_OpTarget_$56208_$",
                            "typeString": "tuple(contract IValidator,enum OpTarget)"
                          }
                        },
                        "functionReturnParameters": 55870,
                        "id": 56016,
                        "nodeType": "Return",
                        "src": "4211:41:78"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_OpTarget_$56208",
                      "typeString": "enum OpTarget"
                    },
                    "id": 56022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 56019,
                      "name": "opTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55927,
                      "src": "4348:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OpTarget_$56208",
                        "typeString": "enum OpTarget"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 56020,
                        "name": "OpTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56208,
                        "src": "4360:8:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_OpTarget_$56208_$",
                          "typeString": "type(enum OpTarget)"
                        }
                      },
                      "id": 56021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4369:9:78",
                      "memberName": "Validator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56206,
                      "src": "4360:18:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OpTarget_$56208",
                        "typeString": "enum OpTarget"
                      }
                    },
                    "src": "4348:30:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56038,
                  "nodeType": "IfStatement",
                  "src": "4344:248:78",
                  "trueBody": {
                    "id": 56037,
                    "nodeType": "Block",
                    "src": "4380:212:78",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 56026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 56024,
                                "name": "validator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55973,
                                "src": "4419:9:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 56025,
                                "name": "opTargetAddr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55919,
                                "src": "4432:12:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4419:25:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "56616c69646174696f6e204661696c65643a20696e76616c69642076616c696461746f72",
                              "id": 56027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4462:38:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_18120eb0b5e22b7c2c363b7cf1d68b9fb4b3f434c0ad1a307238347e057f53d4",
                                "typeString": "literal_string \"Validation Failed: invalid validator\""
                              },
                              "value": "Validation Failed: invalid validator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_18120eb0b5e22b7c2c363b7cf1d68b9fb4b3f434c0ad1a307238347e057f53d4",
                                "typeString": "literal_string \"Validation Failed: invalid validator\""
                              }
                            ],
                            "id": 56023,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "4394:7:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 56028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4394:120:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 56029,
                        "nodeType": "ExpressionStatement",
                        "src": "4394:120:78"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "id": 56031,
                                  "name": "opTargetAddr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 55919,
                                  "src": "4547:12:78",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 56030,
                                "name": "IValidator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56233,
                                "src": "4536:10:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IValidator_$56233_$",
                                  "typeString": "type(contract IValidator)"
                                }
                              },
                              "id": 56032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4536:24:78",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IValidator_$56233",
                                "typeString": "contract IValidator"
                              }
                            },
                            {
                              "expression": {
                                "id": 56033,
                                "name": "OpTarget",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56208,
                                "src": "4562:8:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_OpTarget_$56208_$",
                                  "typeString": "type(enum OpTarget)"
                                }
                              },
                              "id": 56034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4571:9:78",
                              "memberName": "Validator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56206,
                              "src": "4562:18:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_OpTarget_$56208",
                                "typeString": "enum OpTarget"
                              }
                            }
                          ],
                          "id": 56035,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4535:46:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_contract$_IValidator_$56233_$_t_enum$_OpTarget_$56208_$",
                            "typeString": "tuple(contract IValidator,enum OpTarget)"
                          }
                        },
                        "functionReturnParameters": 55870,
                        "id": 56036,
                        "nodeType": "Return",
                        "src": "4528:53:78"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 56040,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55973,
                            "src": "4683:9:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 56039,
                          "name": "IValidator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56233,
                          "src": "4672:10:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IValidator_$56233_$",
                            "typeString": "type(contract IValidator)"
                          }
                        },
                        "id": 56041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4672:21:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IValidator_$56233",
                          "typeString": "contract IValidator"
                        }
                      },
                      {
                        "expression": {
                          "id": 56042,
                          "name": "OpTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56208,
                          "src": "4695:8:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_OpTarget_$56208_$",
                            "typeString": "type(enum OpTarget)"
                          }
                        },
                        "id": 56043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4704:8:78",
                        "memberName": "External",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56207,
                        "src": "4695:17:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OpTarget_$56208",
                          "typeString": "enum OpTarget"
                        }
                      }
                    ],
                    "id": 56044,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4671:42:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IValidator_$56233_$_t_enum$_OpTarget_$56208_$",
                      "typeString": "tuple(contract IValidator,enum OpTarget)"
                    }
                  },
                  "functionReturnParameters": 55870,
                  "id": 56045,
                  "nodeType": "Return",
                  "src": "4664:49:78"
                }
              ]
            },
            "baseFunctions": [56405],
            "functionSelector": "77b326f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidationInfo",
            "nameLocation": "2474:17:78",
            "parameters": {
              "id": 55863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55862,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "2524:6:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 56047,
                  "src": "2501:29:78",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$3684_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 55861,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55860,
                      "name": "UserOperation",
                      "nameLocations": ["2501:13:78"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3684,
                      "src": "2501:13:78"
                    },
                    "referencedDeclaration": 3684,
                    "src": "2501:13:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3684_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2491:45:78"
            },
            "returnParameters": {
              "id": 55870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55866,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56047,
                  "src": "2558:10:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IValidator_$56233",
                    "typeString": "contract IValidator"
                  },
                  "typeName": {
                    "id": 55865,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55864,
                      "name": "IValidator",
                      "nameLocations": ["2558:10:78"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56233,
                      "src": "2558:10:78"
                    },
                    "referencedDeclaration": 56233,
                    "src": "2558:10:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IValidator_$56233",
                      "typeString": "contract IValidator"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55869,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56047,
                  "src": "2570:8:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OpTarget_$56208",
                    "typeString": "enum OpTarget"
                  },
                  "typeName": {
                    "id": 55868,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55867,
                      "name": "OpTarget",
                      "nameLocations": ["2570:8:78"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56208,
                      "src": "2570:8:78"
                    },
                    "referencedDeclaration": 56208,
                    "src": "2570:8:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OpTarget_$56208",
                      "typeString": "enum OpTarget"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2557:22:78"
            },
            "scope": 56129,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 56086,
            "nodeType": "FunctionDefinition",
            "src": "4726:448:78",
            "nodes": [],
            "body": {
              "id": 56085,
              "nodeType": "Block",
              "src": "4854:320:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [56058],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56058,
                      "mutability": "mutable",
                      "name": "validator",
                      "nameLocation": "4875:9:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 56085,
                      "src": "4864:20:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IValidator_$56233",
                        "typeString": "contract IValidator"
                      },
                      "typeName": {
                        "id": 56057,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 56056,
                          "name": "IValidator",
                          "nameLocations": ["4864:10:78"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 56233,
                          "src": "4864:10:78"
                        },
                        "referencedDeclaration": 56233,
                        "src": "4864:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IValidator_$56233",
                          "typeString": "contract IValidator"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 56071,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 56064,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56051,
                                "src": "4930:9:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              },
                              {
                                "components": [
                                  {
                                    "id": 56066,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4942:7:78",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 56065,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4942:7:78",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "id": 56067,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4941:9:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                }
                              ],
                              "expression": {
                                "id": 56062,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4919:3:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 56063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4923:6:78",
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "src": "4919:10:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 56068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4919:32:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 56061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4911:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 56060,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4911:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 56069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4911:41:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 56059,
                      "name": "IValidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56233,
                      "src": "4887:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IValidator_$56233_$",
                        "typeString": "type(contract IValidator)"
                      }
                    },
                    "id": 56070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4887:75:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IValidator_$56233",
                      "typeString": "contract IValidator"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4864:98:78"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 56080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 56073,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56058,
                            "src": "5010:9:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IValidator_$56233",
                              "typeString": "contract IValidator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IValidator_$56233",
                              "typeString": "contract IValidator"
                            }
                          ],
                          "id": 56072,
                          "name": "isCurrentValidator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54685,
                          "src": "4991:18:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IValidator_$56233_$returns$_t_bool_$",
                            "typeString": "function (contract IValidator) view returns (bool)"
                          }
                        },
                        "id": 56074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4991:29:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 56077,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56049,
                            "src": "5074:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 56078,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56051,
                            "src": "5080:9:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "expression": {
                            "id": 56075,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56058,
                            "src": "5040:9:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IValidator_$56233",
                              "typeString": "contract IValidator"
                            }
                          },
                          "id": 56076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5050:23:78",
                          "memberName": "isValidAccountSignature",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56232,
                          "src": "5040:33:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes32,bytes memory) view external returns (bool)"
                          }
                        },
                        "id": 56079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5040:50:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4991:99:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 56082,
                      "name": "ERC1271_FAIL_MAGIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56551,
                      "src": "5149:18:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 56083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4991:176:78",
                    "trueExpression": {
                      "id": 56081,
                      "name": "ERC1271_SUCCESS_MAGIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56548,
                      "src": "5109:21:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 56055,
                  "id": 56084,
                  "nodeType": "Return",
                  "src": "4972:195:78"
                }
              ]
            },
            "baseFunctions": [49001],
            "functionSelector": "1626ba7e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "4735:16:78",
            "parameters": {
              "id": 56052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56049,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "4769:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 56086,
                  "src": "4761:12:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 56048,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4761:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56051,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "4798:9:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 56086,
                  "src": "4783:24:78",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 56050,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4783:5:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4751:62:78"
            },
            "returnParameters": {
              "id": 56055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56054,
                  "mutability": "mutable",
                  "name": "magicValue",
                  "nameLocation": "4842:10:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 56086,
                  "src": "4835:17:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 56053,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4835:6:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4834:19:78"
            },
            "scope": 56129,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 56095,
            "nodeType": "FunctionDefinition",
            "src": "5180:105:78",
            "nodes": [],
            "body": {
              "id": 56094,
              "nodeType": "Block",
              "src": "5283:2:78",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [49726],
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 56092,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 56091,
                  "name": "onlySelf",
                  "nameLocations": ["5274:8:78"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 54564,
                  "src": "5274:8:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "5274:8:78"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "5189:17:78",
            "overrides": {
              "id": 56090,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5265:8:78"
            },
            "parameters": {
              "id": 56089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56088,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "5224:17:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 56095,
                  "src": "5216:25:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5216:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5206:41:78"
            },
            "returnParameters": {
              "id": 56093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5283:0:78"
            },
            "scope": 56129,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 56128,
            "nodeType": "FunctionDefinition",
            "src": "5291:289:78",
            "nodes": [],
            "body": {
              "id": 56127,
              "nodeType": "Block",
              "src": "5358:222:78",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 56108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 56103,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56097,
                      "src": "5372:2:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 56106,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "5386:4:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_imAccount_$56129",
                            "typeString": "contract imAccount"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_imAccount_$56129",
                            "typeString": "contract imAccount"
                          }
                        ],
                        "id": 56105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5378:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 56104,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5378:7:78",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 56107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5378:13:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5372:19:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56113,
                  "nodeType": "IfStatement",
                  "src": "5368:73:78",
                  "trueBody": {
                    "id": 56112,
                    "nodeType": "Block",
                    "src": "5393:48:78",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 56109,
                            "name": "OpTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56208,
                            "src": "5414:8:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_OpTarget_$56208_$",
                              "typeString": "type(enum OpTarget)"
                            }
                          },
                          "id": 56110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5423:7:78",
                          "memberName": "Account",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56205,
                          "src": "5414:16:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OpTarget_$56208",
                            "typeString": "enum OpTarget"
                          }
                        },
                        "functionReturnParameters": 56102,
                        "id": 56111,
                        "nodeType": "Return",
                        "src": "5407:23:78"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 56116,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56097,
                            "src": "5484:2:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 56115,
                          "name": "IValidator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56233,
                          "src": "5473:10:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IValidator_$56233_$",
                            "typeString": "type(contract IValidator)"
                          }
                        },
                        "id": 56117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5473:14:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IValidator_$56233",
                          "typeString": "contract IValidator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IValidator_$56233",
                          "typeString": "contract IValidator"
                        }
                      ],
                      "id": 56114,
                      "name": "isCurrentValidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54685,
                      "src": "5454:18:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IValidator_$56233_$returns$_t_bool_$",
                        "typeString": "function (contract IValidator) view returns (bool)"
                      }
                    },
                    "id": 56118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5454:34:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56123,
                  "nodeType": "IfStatement",
                  "src": "5450:90:78",
                  "trueBody": {
                    "id": 56122,
                    "nodeType": "Block",
                    "src": "5490:50:78",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 56119,
                            "name": "OpTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56208,
                            "src": "5511:8:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_OpTarget_$56208_$",
                              "typeString": "type(enum OpTarget)"
                            }
                          },
                          "id": 56120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5520:9:78",
                          "memberName": "Validator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56206,
                          "src": "5511:18:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OpTarget_$56208",
                            "typeString": "enum OpTarget"
                          }
                        },
                        "functionReturnParameters": 56102,
                        "id": 56121,
                        "nodeType": "Return",
                        "src": "5504:25:78"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "id": 56124,
                      "name": "OpTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56208,
                      "src": "5556:8:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_OpTarget_$56208_$",
                        "typeString": "type(enum OpTarget)"
                      }
                    },
                    "id": 56125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "5565:8:78",
                    "memberName": "External",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 56207,
                    "src": "5556:17:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OpTarget_$56208",
                      "typeString": "enum OpTarget"
                    }
                  },
                  "functionReturnParameters": 56102,
                  "id": 56126,
                  "nodeType": "Return",
                  "src": "5549:24:78"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getOpTarget",
            "nameLocation": "5300:12:78",
            "parameters": {
              "id": 56098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56097,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5321:2:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 56128,
                  "src": "5313:10:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5313:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5312:12:78"
            },
            "returnParameters": {
              "id": 56102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56101,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56128,
                  "src": "5348:8:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OpTarget_$56208",
                    "typeString": "enum OpTarget"
                  },
                  "typeName": {
                    "id": 56100,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56099,
                      "name": "OpTarget",
                      "nameLocations": ["5348:8:78"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56208,
                      "src": "5348:8:78"
                    },
                    "referencedDeclaration": 56208,
                    "src": "5348:8:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OpTarget_$56208",
                      "typeString": "enum OpTarget"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5347:10:78"
            },
            "scope": 56129,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 55722,
              "name": "IimAccount",
              "nameLocations": ["932:10:78"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56406,
              "src": "932:10:78"
            },
            "id": 55723,
            "nodeType": "InheritanceSpecifier",
            "src": "932:10:78"
          },
          {
            "baseName": {
              "id": 55724,
              "name": "Initializable",
              "nameLocations": ["948:13:78"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49611,
              "src": "948:13:78"
            },
            "id": 55725,
            "nodeType": "InheritanceSpecifier",
            "src": "948:13:78"
          },
          {
            "baseName": {
              "id": 55726,
              "name": "UUPSUpgradeable",
              "nameLocations": ["967:15:78"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49727,
              "src": "967:15:78"
            },
            "id": 55727,
            "nodeType": "InheritanceSpecifier",
            "src": "967:15:78"
          },
          {
            "baseName": {
              "id": 55728,
              "name": "EntryManager",
              "nameLocations": ["988:12:78"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54400,
              "src": "988:12:78"
            },
            "id": 55729,
            "nodeType": "InheritanceSpecifier",
            "src": "988:12:78"
          },
          {
            "baseName": {
              "id": 55730,
              "name": "ValidatorManager",
              "nameLocations": ["1006:16:78"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54890,
              "src": "1006:16:78"
            },
            "id": 55731,
            "nodeType": "InheritanceSpecifier",
            "src": "1006:16:78"
          },
          {
            "baseName": {
              "id": 55732,
              "name": "FallbackManager",
              "nameLocations": ["1028:15:78"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 54546,
              "src": "1028:15:78"
            },
            "id": 55733,
            "nodeType": "InheritanceSpecifier",
            "src": "1028:15:78"
          }
        ],
        "canonicalName": "imAccount",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          56129, 54546, 54890, 54400, 54565, 55079, 49727, 49380, 49026, 49039,
          49611, 56406, 56200, 56309, 56355, 56157, 3260, 49002
        ],
        "name": "imAccount",
        "nameLocation": "915:9:78",
        "scope": 56130,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 78
}
